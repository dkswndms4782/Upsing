{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["J6p3Z_wvRH8M","k-zgBJDd3dPG","RLmIU8Cu_r2W","9WCLDx7sARKM","XlByxFxA2bVp","ncA948ErB9R9","J_rtQAkbkIVX","k_YDUvfilXuo","zq5W03bBnyJ2","W0oZMeFr22rg"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["참고사이트 : https://towardsdatascience.com/audio-deep-learning-made-simple-sound-classification-step-by-step-cebc936bbe5 "],"metadata":{"id":"6q_gTlX8Tnpi"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive/')"],"metadata":{"id":"nV5AB-HfKD4O","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677157951920,"user_tz":-540,"elapsed":16128,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"03db2037-8e4f-450c-ec98-7b6a5a37fc8d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}]},{"cell_type":"code","source":["import numpy as np\n","import itertools\n","import librosa\n","import librosa.display\n","import IPython.display as ipd\n","import matplotlib.pyplot as plt\n","import os\n","import glob\n","import pandas as pd\n","import pickle\n","import tensorflow as tf\n","from tqdm import tqdm\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras import Input \n","from tensorflow.keras.layers import Dense, Flatten, MaxPooling2D\n","from tensorflow.keras import regularizers\n","from tensorflow.python.keras.models import load_model\n","from keras.utils import to_categorical\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from keras.metrics import top_k_categorical_accuracy\n","import random\n","plt.style.use('seaborn-white')\n","# train_df = pd.read_csv(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/train_df_2.csv\")\n","# test_df = pd.read_csv(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/test_df_2.csv\")"],"metadata":{"id":"d8bCmqIYgwMG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 1. Make Train Data"],"metadata":{"id":"8rU1Uy-elz_v"}},{"cell_type":"code","source":["train_df = train_df[(train_df['technique'] != 'lip_trill') & (train_df['technique'] != 'breathy')] \n","test_df = test_df[(test_df['technique'] != 'lip_trill') & (test_df['technique'] != 'breathy')]"],"metadata":{"id":"Wj1yHHfORitq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(train_df['technique'].unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sAg7U-6AZc1V","executionInfo":{"status":"ok","timestamp":1676894803189,"user_tz":-540,"elapsed":7,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"e40f9f17-ab18-4adc-d536-3fcd4456e52a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['belt' 'vibrato' 'vocal_fry' 'straight']\n"]}]},{"cell_type":"markdown","source":["### Data Augmentation\n","https://medium.com/@makcedward/data-augmentation-for-audio-76912b01fdf6"],"metadata":{"id":"J6p3Z_wvRH8M"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.preprocessing import StandardScaler\n","\n","audio = []\n","label = []\n","for i in tqdm(range(len(test_df))) :\n","  x, sr = librosa.load(os.path.join('.', test_df[\"path\"].iloc[i]), sr = 44100)\n","  if test_df['technique'].iloc[i] not in ['vibrato','straight']:\n","    iter = int((x.shape[0]//sr))\n","    for j in range(iter): ## 1초씩 잘라서 데이터 붙이지\n","      audio.append(x[j*44100: (j+1)*44100])\n","      label.append(test_df[\"technique\"].iloc[i])\n","  elif test_df['technique'].iloc[i] == 'straight':\n","    for j in range(3):\n","      audio.append(x[j*44100: (j+1)*44100])\n","      label.append(test_df[\"technique\"].iloc[i])\n","    if (int((x.shape[0]//sr)) >= 6):\n","      tmp = librosa.effects.time_stretch(x[0: 2*3*44100], 1.5)\n","      for j in range(1,3):\n","        audio.append(tmp[j*44100: (j+1)*44100])\n","        label.append(test_df[\"technique\"].iloc[i])\n","  elif test_df['technique'].iloc[i] == 'vibrato':\n","    for j in range(3):\n","      audio.append(x[j*44100: (j+1)*44100])\n","      label.append(test_df[\"technique\"].iloc[i])\n","    if (int((x.shape[0]//sr)) >= 6):\n","      tmp = librosa.effects.time_stretch(x[0: 2*3*44100], 1.5)\n","      for j in range(3):\n","        audio.append(tmp[j*44100: (j+1)*44100])\n","        label.append(test_df[\"technique\"].iloc[i])\n"],"metadata":{"id":"ZxDdNwhGCvql","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676896380883,"user_tz":-540,"elapsed":115641,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"eea327b4-d6e0-4b71-e3df-91d61be416ff"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 206/206 [01:55<00:00,  1.78it/s]\n"]}]},{"cell_type":"code","source":["for i in set(label):\n","  print(f\"{i} : {label.count(i)}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JiaNplQXGffU","executionInfo":{"status":"ok","timestamp":1676896380883,"user_tz":-540,"elapsed":23,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"c1153f91-c961-4a3b-f295-5b3eb1972e78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["straight : 353\n","belt : 274\n","vocal_fry : 542\n","vibrato : 318\n"]}]},{"cell_type":"code","source":["tmp = []\n","for i in range(len(audio)):\n","  tmp.append([audio[i], label[i]])\n","tmpdf = pd.DataFrame(tmp, columns = ['audio', 'label'])\n","tmpdf.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/new_1s_data/test_df.pkl\")"],"metadata":{"id":"dEeFxV19Gd5_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["audio_pitch_shift = []\n","for i in tqdm(range(len(audio))):\n","  audio_pitch_shift.append(librosa.effects.pitch_shift(audio[i], 44100, 4))\n","\n","noise = np.random.randn(len(audio[0]))\n","noise = (noise - min(noise)) / (max(noise) - min(noise))\n","audio_noise = audio + 0.1 * noise\n","# Cast back to same data type\n","audio_noise = audio_noise.astype(type(audio[0]))\n","\n","\n","audio = np.concatenate([audio, audio_pitch_shift, audio_noise],  axis=0) \n","label = np.concatenate([label, label, label]) \n","\n","\n","tmp = []\n","for i in tqdm(range(len(audio))):\n","  tmp.append([audio[i], label[i]])\n","tmpdf = pd.DataFrame(tmp, columns = ['audio', 'label'])\n","tmpdf.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_test_df.pkl\")"],"metadata":{"id":"sxUM7YD1JRmv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676896560082,"user_tz":-540,"elapsed":150681,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"2a3bb72c-a69a-4bf9-e797-9c384881f0af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 1487/1487 [02:06<00:00, 11.80it/s]\n","100%|██████████| 4461/4461 [00:00<00:00, 612123.86it/s]\n"]}]},{"cell_type":"code","source":["scaler = StandardScaler()\n","scaled_audio = scaler.fit_transform(audio)\n","\n","tmp = []\n","for i in tqdm(range(len(scaled_audio))):\n","  tmp.append([scaled_audio[i], label[i]])\n","tmpdf = pd.DataFrame(tmp, columns = ['audio', 'label'])\n","tmpdf.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/scaled_augmented_test_df.pkl\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nax76ozqHLSl","executionInfo":{"status":"ok","timestamp":1676896578930,"user_tz":-540,"elapsed":12804,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"2cee61e9-b804-4932-a191-f00541b58968"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 4461/4461 [00:00<00:00, 743819.92it/s]\n"]}]},{"cell_type":"code","source":["train_audio = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_test_df.pkl\")\n","train_scaled_audio = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/scaled_augmented_test_df.pkl\")"],"metadata":{"id":"eh9yrDaNOigU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["scaled_audio_melspectrogram = []\n","for x in train_scaled_audio.audio :\n","  ret = librosa.feature.melspectrogram(y = x, sr = 44100)\n","  scaled_audio_melspectrogram.append(ret)\n","\n","scaled_features = []\n","for i in range(len(scaled_audio_melspectrogram)) :\n","  scaled_features.append([scaled_audio_melspectrogram[i], train_scaled_audio.label[i]])\n","\n","scaled_featuresdf = pd.DataFrame(scaled_features, columns = ['audio', 'label'])\n","\n","scaled_featuresdf.head()\n","scaled_featuresdf.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_scaled_test_df.pkl\")\n"],"metadata":{"id":"cxP9ckVzIFK2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tmp_melspectrogram = []\n","for x in train_scaled_audio.audio :\n","  ret = librosa.feature.melspectrogram(y = x, sr = 44100)\n","  tmp_melspectrogram.append(ret)\n","\n","tmp_amp_db = []\n","for i in range(len(tmp_melspectrogram)) :\n","  tmp_amp = librosa.amplitude_to_db(np.abs(tmp_melspectrogram[i]), ref = np.max) ## np.abs?\n","  tmp_amp_db.append(tmp_amp)\n","\n","db_features = []\n","for i in range(len(tmp_amp_db)) :\n","  db_features.append([tmp_amp_db[i], train_scaled_audio.label[i]])\n","\n","featuresdf = pd.DataFrame(db_features, columns = ['audio', 'label'])\n","\n","featuresdf.head()\n","featuresdf.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_db_scaled_test_df.pkl\")\n"],"metadata":{"id":"U03eW4ItKD6m"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["mfccs_features = []\n","for i in range(len(train_scaled_audio.audio)):\n","  tmp = librosa.feature.L\n","\n","extracted_features=[]\n","for i in tqdm(range(len(mfccs_features))):\n","  extracted_features.append([mfccs_features[i],train_scaled_audio.label[i]])\n","\n","df = pd.DataFrame(extracted_features, columns = ['audio', 'label'])\n","df.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/pkl_data/mfcc_scaled_test_df.pkl\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c8SvyGWKwVnZ","executionInfo":{"status":"ok","timestamp":1676896744333,"user_tz":-540,"elapsed":42330,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"77a22cb0-c115-434c-e202-4aea492f01e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["0it [00:00, ?it/s]\n"]}]},{"cell_type":"code","source":["train_scaled_audio = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/scaled_augmented_train_df.pkl\")\n","mfccs_features = []\n","for i in range(len(train_scaled_audio.audio)):\n","  tmp = librosa.feature.mfcc(y=train_scaled_audio.audio[i], sr=44100, n_mfcc=40)\n","\n","extracted_features=[]\n","for i in tqdm(range(len(mfccs_features))):\n","  extracted_features.append([mfccs_features[i],train_scaled_audio.label[i]])\n","\n","df = pd.DataFrame(extracted_features, columns = ['audio', 'label'])\n","df.to_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/pkl_data/mfcc_scaled_train_df.pkl\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FLlqoS8b0wVU","executionInfo":{"status":"ok","timestamp":1676896886893,"user_tz":-540,"elapsed":142574,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"41b12363-987c-4682-cb39-0537b3503b4e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["0it [00:00, ?it/s]\n"]}]},{"cell_type":"code","source":["train_features = pd.read_pickle(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_train_df.pkl\") \n","test_features = pd.read_pickle(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_test_df.pkl\")\n","# train_features = pd.read_pickle(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/pkl_data/mfcc_train_df.pkl\") \n","# test_features = pd.read_pickle(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/pkl_data/mfcc_test_df.pkl\")"],"metadata":{"id":"TkbRHmUCHrxG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#(1.5) MFCC, Mel EDA"],"metadata":{"id":"k-zgBJDd3dPG"}},{"cell_type":"code","source":["# mel_train = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_scaled_train_df.pkl\")\n","# mel_test = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_scaled_test_df.pkl\")\n","# mel_db_train = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_db_scaled_train_df.pkl\")\n","# mel_db_test = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_db_scaled_test_df.pkl\")\n","audio_train =  pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_train_df.pkl\")\n","audio_test =  pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_test_df.pkl\")"],"metadata":{"id":"OeTr6bxVxEiQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 1차원 오디오 파일"],"metadata":{"id":"pwpgWw8X8REd"}},{"cell_type":"code","source":["audio.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C0lO5N8C8miz","executionInfo":{"status":"ok","timestamp":1676898630712,"user_tz":-540,"elapsed":2,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"9c5057db-2b81-45c5-a7f4-3aa1c20d8e34"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4461, 44100)"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["for i in ['belt', 'vibrato', 'vocal_fry', 'straight'] :\n","  for j in range(len(label)):\n","    if label[j] == i:\n","      plt.figure(figsize=(18, 2))\n","      plt.title(f'Audio : {i}')\n","      plt.plot(audio[j])\n","      plt.ylim((-0.1, 0.1))\n","      plt.show()\n","      break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":557},"id":"v9HMQIgE8Qkg","executionInfo":{"status":"ok","timestamp":1676898739735,"user_tz":-540,"elapsed":1733,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"32a074d2-0ff8-4923-8165-69c2175b1f1e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x144 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**각 클래스별 Mel Spectrogram 출력**"],"metadata":{"id":"h87Ku1Vq2OyK"}},{"cell_type":"code","source":["for i in ['belt', 'vibrato', 'vocal_fry', 'straight']:\n","  librosa.display.specshow(mel[mel['label'] == i].iloc[10]['audio'], sr = 44100, x_axis = 'time', y_axis = 'cqt_note')\n","  plt.colorbar(format = '%+2.0f db')\n","  plt.title(f'Mel Spectrogram: {i}')\n","  plt.tight_layout()\n","  plt.show() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"DZyT1Baj6OV6","executionInfo":{"status":"ok","timestamp":1676895987603,"user_tz":-540,"elapsed":1157,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"6056f52a-cfcc-428c-f057-4fab95a66a68"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/librosa/display.py:1335: UserWarning: Frequency axis exceeds Nyquist. Did you remember to set all spectrogram parameters in specshow?\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### 각 클래스별 db mel spectrogram 출략"],"metadata":{"id":"6FlRZLnJxqOi"}},{"cell_type":"code","source":["for i in ['belt', 'vibrato', 'vocal_fry', 'straight']:\n","  librosa.display.specshow(mel_db[mel_db['label'] == i].iloc[10]['audio'], sr = 44100, x_axis = 'time', y_axis = 'cqt_note')\n","  plt.colorbar(format = '%+2.0f db')\n","  plt.title(f'Mel Spectrogram: {i}')\n","  plt.tight_layout()\n","  plt.show() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Rk5Bc8i289c4","executionInfo":{"status":"ok","timestamp":1676895988895,"user_tz":-540,"elapsed":1293,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"9d8b5032-00e4-4cb3-fa8b-1f80e77e95d7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# 1.7) 피어슨 유사도\n","https://abluesnake.tistory.com/100\n","\n"],"metadata":{"id":"RLmIU8Cu_r2W"}},{"cell_type":"code","source":["def pearson_similarity(a, b):\n","    return np.dot((a - np.mean(a)), (b - np.mean(b))) / ((np.linalg.norm(a - np.mean(a))) * (np.linalg.norm(b - np.mean(b))))"],"metadata":{"id":"YoNB5nZ8_uWh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 2. Data Loader\n"],"metadata":{"id":"ETjO2J-mW3Kb"}},{"cell_type":"code","source":["# mel_train = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_scaled_train_df.pkl\")\n","# mel_test = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_scaled_test_df.pkl\")\n","# mel_db_train = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_db_scaled_train_df.pkl\")\n","# mel_db_test = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/mel_db_scaled_test_df.pkl\")\n","audio_train =  pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_train_df.pkl\")\n","audio_test =  pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/1s_data/augmented_test_df.pkl\")\n","print(len(audio_train['label']))\n","print(audio_train['label'].value_counts())"],"metadata":{"id":"PmPdk7OlBa-J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from keras.utils import to_categorical\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","import random\n","\n","def train_test(train_features, test_features, shuffle = False, audio_flag=False, labelEncoder = True):\n","  x_train = np.array(train_features.audio.tolist())\n","  y_train = np.array(train_features.label.tolist())\n","  x_test = np.array(test_features.audio.tolist())\n","  y_test = np.array(test_features.label.tolist())\n","\n","  if labelEncoder:\n","    le = LabelEncoder()\n","    y_train = to_categorical(le.fit_transform(y_train))\n","    y_test = to_categorical(le.transform(y_test))\n","    print(le.classes_)\n","\n","  \n","  if shuffle: \n","    tmp = list(zip(x_train, y_train))\n","    random.shuffle(tmp)\n","    x_train, y_train = zip(*tmp)\n","\n","    tmp1 = list(zip(x_test, y_test))\n","    random.shuffle(tmp1)\n","    x_test, y_test = zip(*tmp1)\n","    x_train, y_train, x_test, y_test = np.array(x_train,dtype=np.float32), np.array(y_train,dtype=np.float32), np.array(x_test,dtype=np.float32), np.array(y_test,dtype=np.float32)\n","  \n","  if audio_flag:\n","    print(x_train.shape)\n","    x_train = tf.reshape(x_train.astype(float), [-1, 44100, 1])\n","    x_test = tf.reshape(x_test.astype(float), [-1,  44100, 1])\n","    return x_train, y_train, x_test, y_test, le\n","  \n","  n_channels = 1\n","  n_classes = 5\n","\n","  with tf.device('/gpu:0'):\n","    x_train = tf.reshape(x_train, [-1, x_train.shape[1], x_train.shape[2], n_channels])\n","    x_test = tf.reshape(x_test, [-1,  x_test.shape[1], x_test.shape[2], n_channels])\n","\n","\n","  return x_train, y_train, x_test, y_test, le\n","\n","\n","# mel_x_train, mel_y_train, mel_x_test, mel_y_test = train_test(mel_train, mel_test, shuffle = True)\n","# mel_db_x_train, mel_db_y_train, mel_db_x_test, mel_db_y_test = train_test(mel_db_train, mel_db_test, shuffle = True)\n","audio_x_train, audio_y_train, audio_x_test, audio_y_test, le = train_test(audio_train, audio_test, shuffle = True, audio_flag = True)"],"metadata":{"id":"Fu9VHj_hkb9p"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# 3. Training"],"metadata":{"id":"k8JWlFv4W3PM"}},{"cell_type":"markdown","source":["### 1) CNN 4Layers"],"metadata":{"id":"XlByxFxA2bVp"}},{"cell_type":"code","source":["# (None, 127, 86, 16) \n","def make_model(input):\n","  model = keras.Sequential()\n","\n","  model.add(layers.Conv2D(input_shape=(input[0].shape[0], input[0].shape[1], 1), filters=16, kernel_size=(2,1), activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling2D(pool_size=2))\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv2D(kernel_size=(8,1), filters=32, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling2D(pool_size=2))\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv2D(kernel_size=(2,1), filters=64, activation='relu')) # 64\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling2D(pool_size=3))\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv2D(kernel_size=(8,1), filters=128, activation='relu')) # 128\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling2D(pool_size=2)) ##\n","  model.add(layers.Dropout(0.3)) #3\n","\n","  model.add(layers.GlobalAveragePooling2D())\n","  model.add(tf.keras.layers.Dense(units=64)) # 128\n","  model.add(tf.keras.layers.Dense(units=22))\n","  model.add(tf.keras.layers.Dense(units=4, activation='softmax'))\n","\n","  model.summary()\n","  return model\n","\n","training_epochs = 100\n","num_batch_size = 64\n","learning_rate = 1e-4"],"metadata":{"id":"ZxScy_bkmGX2"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"4KtBGWOIHZMs"}},{"cell_type":"code","source":["mel_model = make_model(mel_x_train)\n","mel_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.SGD(learning_rate=learning_rate), metrics=['accuracy'])\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n","mel_model.fit(mel_x_train, mel_y_train, batch_size = num_batch_size, epochs = training_epochs , validation_data = (mel_x_test, mel_y_test) , callbacks = [early])\n","results = mel_model.evaluate(mel_x_test, mel_y_test, batch_size=64)\n","print('test loss, test acc:', results)\n","mel_model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/mel_model.h5\")"],"metadata":{"id":"hF4F7UvJJpE2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676951834294,"user_tz":-540,"elapsed":43625,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"4b832e84-5016-441d-cbe9-2f691eb3cc80"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_16 (Conv2D)          (None, 127, 87, 16)       48        \n","                                                                 \n"," batch_normalization_16 (Bat  (None, 127, 87, 16)      64        \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_16 (MaxPoolin  (None, 63, 43, 16)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_16 (Dropout)        (None, 63, 43, 16)        0         \n","                                                                 \n"," conv2d_17 (Conv2D)          (None, 56, 43, 32)        4128      \n","                                                                 \n"," batch_normalization_17 (Bat  (None, 56, 43, 32)       128       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_17 (MaxPoolin  (None, 28, 21, 32)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_17 (Dropout)        (None, 28, 21, 32)        0         \n","                                                                 \n"," conv2d_18 (Conv2D)          (None, 27, 21, 64)        4160      \n","                                                                 \n"," batch_normalization_18 (Bat  (None, 27, 21, 64)       256       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_18 (MaxPoolin  (None, 9, 7, 64)         0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_18 (Dropout)        (None, 9, 7, 64)          0         \n","                                                                 \n"," conv2d_19 (Conv2D)          (None, 2, 7, 128)         65664     \n","                                                                 \n"," batch_normalization_19 (Bat  (None, 2, 7, 128)        512       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_19 (MaxPoolin  (None, 1, 3, 128)        0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_19 (Dropout)        (None, 1, 3, 128)         0         \n","                                                                 \n"," global_average_pooling2d_4   (None, 128)              0         \n"," (GlobalAveragePooling2D)                                        \n","                                                                 \n"," dense_12 (Dense)            (None, 64)                8256      \n","                                                                 \n"," dense_13 (Dense)            (None, 22)                1430      \n","                                                                 \n"," dense_14 (Dense)            (None, 4)                 92        \n","                                                                 \n","=================================================================\n","Total params: 84,738\n","Trainable params: 84,258\n","Non-trainable params: 480\n","_________________________________________________________________\n","Epoch 1/100\n","240/240 [==============================] - 7s 13ms/step - loss: 1.5570 - accuracy: 0.3395 - val_loss: 1.2506 - val_accuracy: 0.4743\n","Epoch 2/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.4105 - accuracy: 0.3887 - val_loss: 1.2195 - val_accuracy: 0.4898\n","Epoch 3/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.3671 - accuracy: 0.4022 - val_loss: 1.2195 - val_accuracy: 0.4860\n","Epoch 4/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.3383 - accuracy: 0.4138 - val_loss: 1.2143 - val_accuracy: 0.4887\n","Epoch 5/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.3102 - accuracy: 0.4185 - val_loss: 1.2302 - val_accuracy: 0.4831\n","Epoch 6/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.2920 - accuracy: 0.4287 - val_loss: 1.2272 - val_accuracy: 0.4723\n","Epoch 7/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.2752 - accuracy: 0.4396 - val_loss: 1.2456 - val_accuracy: 0.4438\n","Epoch 8/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.2563 - accuracy: 0.4478 - val_loss: 1.3355 - val_accuracy: 0.3515\n","Epoch 9/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.2402 - accuracy: 0.4557 - val_loss: 1.3454 - val_accuracy: 0.3425\n","Epoch 10/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.2180 - accuracy: 0.4628 - val_loss: 1.4201 - val_accuracy: 0.2524\n","Epoch 11/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.2096 - accuracy: 0.4688 - val_loss: 1.4343 - val_accuracy: 0.1926\n","Epoch 12/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.1912 - accuracy: 0.4868 - val_loss: 1.6240 - val_accuracy: 0.1887\n","Epoch 13/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.1698 - accuracy: 0.5002 - val_loss: 1.4926 - val_accuracy: 0.1901\n","Epoch 14/100\n","240/240 [==============================] - 3s 11ms/step - loss: 1.1386 - accuracy: 0.5133 - val_loss: 1.5766 - val_accuracy: 0.1901\n","70/70 [==============================] - 0s 4ms/step - loss: 1.5766 - accuracy: 0.1901\n","test loss, test acc: [1.5766286849975586, 0.19009190797805786]\n"]}]},{"cell_type":"code","source":["mel_db_model = make_model(mel_db_x_train)\n","mel_db_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(learning_rate=learning_rate), metrics=['accuracy'])\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n","mel_db_model.fit(mel_db_x_train, mel_db_y_train, batch_size = num_batch_size, epochs = training_epochs , validation_data = (mel_db_x_test, mel_db_y_test)  , callbacks = [early])\n","results = mel_db_model.evaluate(mel_db_x_test, mel_db_y_test, batch_size=64)\n","print('test loss, test acc:', results)\n","mel_model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/mel_db_model.h5\")"],"metadata":{"id":"IYQTmRbzKT1p","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1676951873587,"user_tz":-540,"elapsed":34875,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"bee91a30-4bb3-4921-ebc0-7b4a49bf52ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_20 (Conv2D)          (None, 127, 87, 16)       48        \n","                                                                 \n"," batch_normalization_20 (Bat  (None, 127, 87, 16)      64        \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_20 (MaxPoolin  (None, 63, 43, 16)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_20 (Dropout)        (None, 63, 43, 16)        0         \n","                                                                 \n"," conv2d_21 (Conv2D)          (None, 56, 43, 32)        4128      \n","                                                                 \n"," batch_normalization_21 (Bat  (None, 56, 43, 32)       128       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_21 (MaxPoolin  (None, 28, 21, 32)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_21 (Dropout)        (None, 28, 21, 32)        0         \n","                                                                 \n"," conv2d_22 (Conv2D)          (None, 27, 21, 64)        4160      \n","                                                                 \n"," batch_normalization_22 (Bat  (None, 27, 21, 64)       256       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_22 (MaxPoolin  (None, 9, 7, 64)         0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_22 (Dropout)        (None, 9, 7, 64)          0         \n","                                                                 \n"," conv2d_23 (Conv2D)          (None, 2, 7, 128)         65664     \n","                                                                 \n"," batch_normalization_23 (Bat  (None, 2, 7, 128)        512       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_23 (MaxPoolin  (None, 1, 3, 128)        0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_23 (Dropout)        (None, 1, 3, 128)         0         \n","                                                                 \n"," global_average_pooling2d_5   (None, 128)              0         \n"," (GlobalAveragePooling2D)                                        \n","                                                                 \n"," dense_15 (Dense)            (None, 64)                8256      \n","                                                                 \n"," dense_16 (Dense)            (None, 22)                1430      \n","                                                                 \n"," dense_17 (Dense)            (None, 4)                 92        \n","                                                                 \n","=================================================================\n","Total params: 84,738\n","Trainable params: 84,258\n","Non-trainable params: 480\n","_________________________________________________________________\n","Epoch 1/100\n","240/240 [==============================] - 7s 13ms/step - loss: 1.3928 - accuracy: 0.4359 - val_loss: 1.2298 - val_accuracy: 0.4172\n","Epoch 2/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.1633 - accuracy: 0.5209 - val_loss: 1.5470 - val_accuracy: 0.4015\n","Epoch 3/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.0730 - accuracy: 0.5543 - val_loss: 1.7597 - val_accuracy: 0.4010\n","Epoch 4/100\n","240/240 [==============================] - 3s 12ms/step - loss: 1.0250 - accuracy: 0.5710 - val_loss: 1.8011 - val_accuracy: 0.4082\n","Epoch 5/100\n","240/240 [==============================] - 3s 11ms/step - loss: 0.9860 - accuracy: 0.5914 - val_loss: 1.8052 - val_accuracy: 0.4140\n","Epoch 6/100\n","240/240 [==============================] - 3s 11ms/step - loss: 0.9481 - accuracy: 0.6029 - val_loss: 1.7616 - val_accuracy: 0.4273\n","Epoch 7/100\n","240/240 [==============================] - 3s 12ms/step - loss: 0.9285 - accuracy: 0.6107 - val_loss: 1.8360 - val_accuracy: 0.4273\n","Epoch 8/100\n","240/240 [==============================] - 3s 11ms/step - loss: 0.9014 - accuracy: 0.6296 - val_loss: 1.7114 - val_accuracy: 0.4398\n","Epoch 9/100\n","240/240 [==============================] - 3s 11ms/step - loss: 0.8800 - accuracy: 0.6377 - val_loss: 1.7509 - val_accuracy: 0.4434\n","Epoch 10/100\n","240/240 [==============================] - 3s 12ms/step - loss: 0.8663 - accuracy: 0.6426 - val_loss: 1.8455 - val_accuracy: 0.4470\n","Epoch 11/100\n","240/240 [==============================] - 3s 12ms/step - loss: 0.8466 - accuracy: 0.6532 - val_loss: 1.6894 - val_accuracy: 0.4591\n","70/70 [==============================] - 0s 4ms/step - loss: 1.6894 - accuracy: 0.4591\n","test loss, test acc: [1.6894135475158691, 0.45908990502357483]\n"]}]},{"cell_type":"code","source":["total_x_train = np.concatenate((mel_x_train, mel_db_x_train), axis=0)\n","total_y_train = np.concatenate((mel_y_train, mel_db_y_train), axis=0)\n","total_x_test = np.concatenate((mel_x_test, mel_db_x_test), axis=0)\n","total_y_test = np.concatenate((mel_y_test, mel_db_y_test), axis=0)\n","\n","total_model = make_model(total_x_train)\n","total_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(learning_rate=learning_rate), metrics=['accuracy'])\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=20)\n","total_model.fit(total_x_train, total_y_train, batch_size = num_batch_size, epochs = training_epochs , validation_data = (total_x_test, total_y_test)  , callbacks = [early])\n","results = total_model.evaluate(total_x_test, total_y_test, batch_size=64)\n","print('test loss, test acc:', results)\n","total_model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/total_model.h5\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23NuzoKMJHgV","executionInfo":{"status":"ok","timestamp":1676955383161,"user_tz":-540,"elapsed":128781,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"9016ffe9-e09f-422d-8c61-8638cc826dba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_15\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_24 (Conv2D)          (None, 127, 87, 16)       48        \n","                                                                 \n"," batch_normalization_44 (Bat  (None, 127, 87, 16)      64        \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_24 (MaxPoolin  (None, 63, 43, 16)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_40 (Dropout)        (None, 63, 43, 16)        0         \n","                                                                 \n"," conv2d_25 (Conv2D)          (None, 56, 43, 32)        4128      \n","                                                                 \n"," batch_normalization_45 (Bat  (None, 56, 43, 32)       128       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_25 (MaxPoolin  (None, 28, 21, 32)       0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_41 (Dropout)        (None, 28, 21, 32)        0         \n","                                                                 \n"," conv2d_26 (Conv2D)          (None, 27, 21, 64)        4160      \n","                                                                 \n"," batch_normalization_46 (Bat  (None, 27, 21, 64)       256       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_26 (MaxPoolin  (None, 9, 7, 64)         0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_42 (Dropout)        (None, 9, 7, 64)          0         \n","                                                                 \n"," conv2d_27 (Conv2D)          (None, 2, 7, 128)         65664     \n","                                                                 \n"," batch_normalization_47 (Bat  (None, 2, 7, 128)        512       \n"," chNormalization)                                                \n","                                                                 \n"," max_pooling2d_27 (MaxPoolin  (None, 1, 3, 128)        0         \n"," g2D)                                                            \n","                                                                 \n"," dropout_43 (Dropout)        (None, 1, 3, 128)         0         \n","                                                                 \n"," global_average_pooling2d_7   (None, 128)              0         \n"," (GlobalAveragePooling2D)                                        \n","                                                                 \n"," dense_28 (Dense)            (None, 64)                8256      \n","                                                                 \n"," dense_29 (Dense)            (None, 22)                1430      \n","                                                                 \n"," dense_30 (Dense)            (None, 4)                 92        \n","                                                                 \n","=================================================================\n","Total params: 84,738\n","Trainable params: 84,258\n","Non-trainable params: 480\n","_________________________________________________________________\n","Epoch 1/500\n","480/480 [==============================] - 10s 13ms/step - loss: 1.5627 - accuracy: 0.2986 - val_loss: 1.2953 - val_accuracy: 0.4122\n","Epoch 2/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.4202 - accuracy: 0.3293 - val_loss: 1.2904 - val_accuracy: 0.4135\n","Epoch 3/500\n","480/480 [==============================] - 6s 11ms/step - loss: 1.3835 - accuracy: 0.3504 - val_loss: 1.3264 - val_accuracy: 0.4122\n","Epoch 4/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.3416 - accuracy: 0.3684 - val_loss: 1.5547 - val_accuracy: 0.4130\n","Epoch 5/500\n","480/480 [==============================] - 6s 12ms/step - loss: 1.3174 - accuracy: 0.3860 - val_loss: 1.8495 - val_accuracy: 0.4161\n","Epoch 6/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2935 - accuracy: 0.4029 - val_loss: 1.9912 - val_accuracy: 0.4153\n","Epoch 7/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2746 - accuracy: 0.4159 - val_loss: 2.3400 - val_accuracy: 0.4172\n","Epoch 8/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2576 - accuracy: 0.4237 - val_loss: 2.5219 - val_accuracy: 0.4157\n","Epoch 9/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2411 - accuracy: 0.4326 - val_loss: 3.5078 - val_accuracy: 0.4099\n","Epoch 10/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2282 - accuracy: 0.4393 - val_loss: 3.4387 - val_accuracy: 0.4078\n","Epoch 11/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.2141 - accuracy: 0.4477 - val_loss: 4.2138 - val_accuracy: 0.4043\n","Epoch 12/500\n","480/480 [==============================] - 6s 12ms/step - loss: 1.2072 - accuracy: 0.4534 - val_loss: 3.6779 - val_accuracy: 0.4099\n","Epoch 13/500\n","480/480 [==============================] - 6s 12ms/step - loss: 1.1930 - accuracy: 0.4614 - val_loss: 3.6886 - val_accuracy: 0.4087\n","Epoch 14/500\n","480/480 [==============================] - 6s 12ms/step - loss: 1.1867 - accuracy: 0.4623 - val_loss: 3.6348 - val_accuracy: 0.4157\n","Epoch 15/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1810 - accuracy: 0.4712 - val_loss: 3.4088 - val_accuracy: 0.4169\n","Epoch 16/500\n","480/480 [==============================] - 6s 11ms/step - loss: 1.1724 - accuracy: 0.4717 - val_loss: 3.6285 - val_accuracy: 0.4150\n","Epoch 17/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1622 - accuracy: 0.4791 - val_loss: 3.9771 - val_accuracy: 0.4116\n","Epoch 18/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1529 - accuracy: 0.4864 - val_loss: 4.1570 - val_accuracy: 0.4149\n","Epoch 19/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1496 - accuracy: 0.4896 - val_loss: 4.1656 - val_accuracy: 0.4257\n","Epoch 20/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1467 - accuracy: 0.4908 - val_loss: 3.8560 - val_accuracy: 0.4314\n","Epoch 21/500\n","480/480 [==============================] - 6s 12ms/step - loss: 1.1360 - accuracy: 0.4974 - val_loss: 3.2448 - val_accuracy: 0.4284\n","Epoch 22/500\n","480/480 [==============================] - 5s 11ms/step - loss: 1.1326 - accuracy: 0.5022 - val_loss: 3.4298 - val_accuracy: 0.4357\n","140/140 [==============================] - 1s 4ms/step - loss: 3.4298 - accuracy: 0.4357\n","test loss, test acc: [3.4298198223114014, 0.43566465377807617]\n"]}]},{"cell_type":"markdown","source":["### 2) waveform_model"],"metadata":{"id":"B2xSukrsLsPK"}},{"cell_type":"code","source":["''' so far the best model\n","# (None, 127, 86, 16) \n","def make_waveform_model(input):\n","  model = keras.Sequential()\n","\n","  model.add(layers.Conv1D(input_shape=(44100, 1), filters=16, kernel_size=128, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  # model.add(layers.Dropout(0.2))\n","\n","  model.add(layers.Conv1D(kernel_size=64, filters=8, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv1D(kernel_size=256, filters=32, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  # model.add(layers.GlobalAveragePooling1D())\n","  model.add(tf.keras.layers.Flatten())\n","  # model.add(tf.keras.layers.Dense(units=32, activation='relu', kernel_regularizer=regularizers.L2(1e-3)))\n","  # model.add(layers.Dropout(0.3))\n","  model.add(tf.keras.layers.Dense(units=4, activation='softmax', kernel_regularizer=regularizers.L2(1e-3)))\n","\n","  model.summary()\n","  return model\n","\n","\n","training_epochs = 100\n","num_batch_size = 64\n","learning_rate = 1e-3\n","# opt = keras.optimizers.RMSprop(learning_rate=learning_rate) ## SGD, optimizer 바꿔보기\n","\n","audio_model = make_waveform_model(audio_x_train)\n","# keras.optimizers.RMSprop(learning_rate=learning_rate)\n","audio_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(learning_rate=learning_rate), metrics=['accuracy'])\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=20)\n","audio_model.fit(audio_x_train, audio_y_train, batch_size = num_batch_size, epochs = training_epochs , validation_data = (audio_x_test, audio_y_test) , callbacks = [early])\n","results = audio_model.evaluate(audio_x_test, audio_y_test, batch_size=64)\n","print('test loss, test acc:', results)\n","'''"],"metadata":{"id":"ygfzec-v5YRv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# (None, 127, 86, 16) \n","def make_waveform_model(input):\n","  model = keras.Sequential()\n","\n","  model.add(layers.Conv1D(input_shape=(44100, 1), filters=16, kernel_size=128, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv1D(kernel_size=64, filters=8, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv1D(kernel_size=256, filters=32, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=32, strides=8)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  model.add(layers.Conv1D(kernel_size=16, filters=32, activation='relu'))\n","  model.add(layers.BatchNormalization())\n","  model.add(layers.MaxPooling1D(pool_size=2, strides=2)) # 64\n","  model.add(layers.Dropout(0.3))\n","\n","  # model.add(layers.GlobalAveragePooling1D())\n","  model.add(tf.keras.layers.Flatten())\n","  model.add(tf.keras.layers.Dense(units=32, activation='relu', kernel_regularizer=regularizers.L2(1e-3)))\n","  model.add(layers.Dropout(0.3))\n","  model.add(tf.keras.layers.Dense(units=4, activation='softmax', kernel_regularizer=regularizers.L2(1e-3)))\n","\n","  model.summary()\n","  return model\n","\n","tmp = make_waveform_model(1)\n","\n","training_epochs = 1 # 100\n","num_batch_size = 64\n","learning_rate = 1e-3\n","# opt = keras.optimizers.RMSprop(learning_rate=learning_rate) ## SGD, optimizer 바꿔보기\n","\n","audio_model = make_waveform_model(audio_x_train)\n","# keras.optimizers.RMSprop(learning_rate=learning_rate)\n","# audio_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(learning_rate=learning_rate), metrics=['accuracy'])\n","audio_model.compile(loss='categorical_crossentropy', optimizer=keras.optimizers.Adam(learning_rate=learning_rate), metrics=tf.keras.metrics.TopKCategoricalAccuracy(k=2, name='top_k_categorical_accuracy'))\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=20)\n","audio_model.fit(audio_x_train, audio_y_train, batch_size = num_batch_size, epochs = training_epochs , validation_data = (audio_x_test, audio_y_test) , callbacks = [early])\n","results = audio_model.evaluate(audio_x_test, audio_y_test, batch_size=64)\n","print('test loss, top2 acc :', results)\n","tmp = audio_model.predict(audio_x_test)"],"metadata":{"id":"jx5jpjOwKkOa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677159073275,"user_tz":-540,"elapsed":271,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"a64d54fe-be46-4275-8a5b-1e8416a711b1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv1d (Conv1D)             (None, 43973, 16)         2064      \n","                                                                 \n"," batch_normalization (BatchN  (None, 43973, 16)        64        \n"," ormalization)                                                   \n","                                                                 \n"," max_pooling1d (MaxPooling1D  (None, 5493, 16)         0         \n"," )                                                               \n","                                                                 \n"," dropout (Dropout)           (None, 5493, 16)          0         \n","                                                                 \n"," conv1d_1 (Conv1D)           (None, 5430, 8)           8200      \n","                                                                 \n"," batch_normalization_1 (Batc  (None, 5430, 8)          32        \n"," hNormalization)                                                 \n","                                                                 \n"," max_pooling1d_1 (MaxPooling  (None, 675, 8)           0         \n"," 1D)                                                             \n","                                                                 \n"," dropout_1 (Dropout)         (None, 675, 8)            0         \n","                                                                 \n"," conv1d_2 (Conv1D)           (None, 420, 32)           65568     \n","                                                                 \n"," batch_normalization_2 (Batc  (None, 420, 32)          128       \n"," hNormalization)                                                 \n","                                                                 \n"," max_pooling1d_2 (MaxPooling  (None, 49, 32)           0         \n"," 1D)                                                             \n","                                                                 \n"," dropout_2 (Dropout)         (None, 49, 32)            0         \n","                                                                 \n"," conv1d_3 (Conv1D)           (None, 34, 32)            16416     \n","                                                                 \n"," batch_normalization_3 (Batc  (None, 34, 32)           128       \n"," hNormalization)                                                 \n","                                                                 \n"," max_pooling1d_3 (MaxPooling  (None, 17, 32)           0         \n"," 1D)                                                             \n","                                                                 \n"," dropout_3 (Dropout)         (None, 17, 32)            0         \n","                                                                 \n"," flatten (Flatten)           (None, 544)               0         \n","                                                                 \n"," dense (Dense)               (None, 32)                17440     \n","                                                                 \n"," dropout_4 (Dropout)         (None, 32)                0         \n","                                                                 \n"," dense_1 (Dense)             (None, 4)                 132       \n","                                                                 \n","=================================================================\n","Total params: 110,172\n","Trainable params: 109,996\n","Non-trainable params: 176\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["audio_model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/audio_best_model.h5\")"],"metadata":{"id":"5h2mh4WXVKZi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","#  keras.models 이거 빼면 로드 안됨\n","modelA = keras.models.load_model(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/audio_best_model.h5\")\n","modelA.fit(audio, label, epochs = 25)\n","resultsA = modelA.evaluate(audio, label)\n","print(\"test loss, test acc:\", resultsA)\n","# modelA.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/fine_trained_model.h5\")\n","\n","modelB = keras.models.load_model(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/audio_best_trained_twice_model.h5\")\n","modelB.fit(audio, label, epochs = 22)\n","resultsB = modelB.evaluate(audio, label)\n","print(\"test loss, test acc:\", resultsB)\n","modelB.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/fine_trained_model.h5\")\n","'''"],"metadata":{"id":"zQn0prl9vN4j","executionInfo":{"status":"ok","timestamp":1677074052119,"user_tz":-540,"elapsed":10092,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"73636e35-eb58-4bb7-cf25-7d148fa52f17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n","4/4 [==============================] - 2s 19ms/step - loss: 3.0896 - accuracy: 0.3250\n","Epoch 2/25\n","4/4 [==============================] - 0s 20ms/step - loss: 1.5318 - accuracy: 0.5167\n","Epoch 3/25\n","4/4 [==============================] - 0s 19ms/step - loss: 1.0511 - accuracy: 0.6167\n","Epoch 4/25\n","4/4 [==============================] - 0s 19ms/step - loss: 0.6052 - accuracy: 0.7500\n","Epoch 5/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.4956 - accuracy: 0.7750\n","Epoch 6/25\n","4/4 [==============================] - 0s 21ms/step - loss: 0.3992 - accuracy: 0.8333\n","Epoch 7/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.3068 - accuracy: 0.9000\n","Epoch 8/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.2320 - accuracy: 0.9000\n","Epoch 9/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.1604 - accuracy: 0.9667\n","Epoch 10/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.1923 - accuracy: 0.9333\n","Epoch 11/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.1336 - accuracy: 0.9750\n","Epoch 12/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.1221 - accuracy: 0.9833\n","Epoch 13/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.1284 - accuracy: 0.9833\n","Epoch 14/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.1406 - accuracy: 0.9833\n","Epoch 15/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.0933 - accuracy: 1.0000\n","Epoch 16/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.0811 - accuracy: 0.9917\n","Epoch 17/25\n","4/4 [==============================] - 0s 19ms/step - loss: 0.1029 - accuracy: 0.9917\n","Epoch 18/25\n","4/4 [==============================] - 0s 19ms/step - loss: 0.0972 - accuracy: 0.9833\n","Epoch 19/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0688 - accuracy: 1.0000\n","Epoch 20/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0554 - accuracy: 0.9917\n","Epoch 21/25\n","4/4 [==============================] - 0s 19ms/step - loss: 0.0583 - accuracy: 1.0000\n","Epoch 22/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0453 - accuracy: 1.0000\n","Epoch 23/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0431 - accuracy: 1.0000\n","Epoch 24/25\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0522 - accuracy: 0.9917\n","Epoch 25/25\n","4/4 [==============================] - 0s 17ms/step - loss: 0.0449 - accuracy: 1.0000\n","4/4 [==============================] - 0s 10ms/step - loss: 0.3545 - accuracy: 0.8750\n","test loss, test acc: [0.35451361536979675, 0.875]\n","Epoch 1/22\n","4/4 [==============================] - 2s 20ms/step - loss: 4.1095 - accuracy: 0.2667\n","Epoch 2/22\n","4/4 [==============================] - 0s 21ms/step - loss: 2.1757 - accuracy: 0.4500\n","Epoch 3/22\n","4/4 [==============================] - 0s 20ms/step - loss: 1.1126 - accuracy: 0.5917\n","Epoch 4/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.8484 - accuracy: 0.6750\n","Epoch 5/22\n","4/4 [==============================] - 0s 17ms/step - loss: 0.7603 - accuracy: 0.7417\n","Epoch 6/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.4501 - accuracy: 0.8417\n","Epoch 7/22\n","4/4 [==============================] - 0s 17ms/step - loss: 0.3940 - accuracy: 0.8667\n","Epoch 8/22\n","4/4 [==============================] - 0s 21ms/step - loss: 0.2833 - accuracy: 0.9167\n","Epoch 9/22\n","4/4 [==============================] - 0s 17ms/step - loss: 0.2689 - accuracy: 0.9083\n","Epoch 10/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.2617 - accuracy: 0.9250\n","Epoch 11/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.1804 - accuracy: 0.9500\n","Epoch 12/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.1778 - accuracy: 0.9417\n","Epoch 13/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.1359 - accuracy: 0.9667\n","Epoch 14/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.1180 - accuracy: 0.9750\n","Epoch 15/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0929 - accuracy: 0.9917\n","Epoch 16/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.1063 - accuracy: 0.9833\n","Epoch 17/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0807 - accuracy: 0.9917\n","Epoch 18/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0792 - accuracy: 0.9833\n","Epoch 19/22\n","4/4 [==============================] - 0s 19ms/step - loss: 0.0684 - accuracy: 0.9917\n","Epoch 20/22\n","4/4 [==============================] - 0s 17ms/step - loss: 0.0639 - accuracy: 1.0000\n","Epoch 21/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0776 - accuracy: 0.9750\n","Epoch 22/22\n","4/4 [==============================] - 0s 18ms/step - loss: 0.0571 - accuracy: 1.0000\n","4/4 [==============================] - 0s 9ms/step - loss: 0.1817 - accuracy: 0.9583\n","test loss, test acc: [0.181687131524086, 0.9583333134651184]\n"]}]},{"cell_type":"markdown","source":["### 3) waveform model + real data"],"metadata":{"id":"XjRAdG0gAQEZ"}},{"cell_type":"code","source":["le = LabelEncoder()\n","le.fit([\"belt\", \"straight\", \"vibrato\", \"vocal_fry\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FTSN4qGjA2Ub","executionInfo":{"status":"ok","timestamp":1677157973243,"user_tz":-540,"elapsed":373,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"63a84c04-147f-4d8f-e970-531a258122f9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LabelEncoder()"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["def real_data(file_name):\n","  fine_df = pd.read_pickle(f\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/fine_data/{file_name}.pkl\")\n","  fine_audio = np.array(fine_df.audio.tolist())\n","  fine_label = np.array(fine_df.label.tolist())\n","  fine_audio = tf.reshape(fine_audio.astype(float), [-1,  44100, 1])\n","  fine_label = to_categorical(le.transform(fine_label))\n","  return fine_audio, fine_label\n","\n","fine_audio, fine_label = real_data(\"augmented_scaled_fine\")\n","yj_audio, yj_label = real_data(\"augmented_scaled_yj_fine\")\n","migyo_audio, migyo_label = real_data(\"augmented_scaled_migyo_fine\")\n","yj_audio_straight, yj_label_straight = real_data(\"augmented_scaled_yj_fine_straight\")\n","yj_label_straight = np.array([[0.,1.,0.,0.] for i in range(len(yj_audio_straight))])"],"metadata":{"id":"TG-e1PI9Y1NY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.unique(np.argmax(fine_label, axis = 1), return_counts= True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eIGun-UxjKL9","executionInfo":{"status":"ok","timestamp":1677160416127,"user_tz":-540,"elapsed":535,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"441432a2-ad5d-436c-f4a3-66fbdc1f5ff5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([0, 2, 3]), array([48, 36, 36]))"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["print(model.evaluate(yj_audio_straight, yj_label_straight))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vvY_I6iqsGiS","executionInfo":{"status":"ok","timestamp":1677162962777,"user_tz":-540,"elapsed":3,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"cb06bfce-5d38-4436-dd29-1f78e8446e1d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 10ms/step - loss: 4.6662 - accuracy: 0.0250\n","[4.666163444519043, 0.02500000037252903]\n"]}]},{"cell_type":"code","source":["model = keras.models.load_model(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/audio_best_trained_twice_model.h5\")\n","model.fit(yj_audio_straight, yj_label_straight, epochs = 5)\n","model.fit(migyo_audio, migyo_label, epochs = 5)\n","model.fit(fine_audio, fine_label, epochs = 5)\n","model.fit(migyo_audio, migyo_label, epochs = 5)\n","model.fit(fine_audio, fine_label, epochs = 5)\n","model.fit(migyo_audio, migyo_label, epochs = 5)\n","model.fit(fine_audio, fine_label, epochs = 5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eCcaOjlTP3rw","executionInfo":{"status":"ok","timestamp":1677163000132,"user_tz":-540,"elapsed":5405,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"50486bb8-b086-4ddd-e13e-9765ca9f8d55"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","4/4 [==============================] - 2s 20ms/step - loss: 3.1541 - accuracy: 0.2000\n","Epoch 2/5\n","4/4 [==============================] - 0s 19ms/step - loss: 0.8523 - accuracy: 0.7083\n","Epoch 3/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.2735 - accuracy: 0.9250\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.0792 - accuracy: 0.9833\n","Epoch 5/5\n","4/4 [==============================] - 0s 16ms/step - loss: 0.0856 - accuracy: 0.9750\n","Epoch 1/5\n","4/4 [==============================] - 0s 17ms/step - loss: 7.1793 - accuracy: 0.0583\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 2.8251 - accuracy: 0.2167\n","Epoch 3/5\n","4/4 [==============================] - 0s 17ms/step - loss: 1.4727 - accuracy: 0.4583\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 1.0330 - accuracy: 0.5833\n","Epoch 5/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.7956 - accuracy: 0.6750\n","Epoch 1/5\n","4/4 [==============================] - 0s 18ms/step - loss: 2.0094 - accuracy: 0.4250\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 1.3521 - accuracy: 0.5250\n","Epoch 3/5\n","4/4 [==============================] - 0s 16ms/step - loss: 1.2929 - accuracy: 0.5333\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.9662 - accuracy: 0.5750\n","Epoch 5/5\n","4/4 [==============================] - 0s 16ms/step - loss: 0.8261 - accuracy: 0.6083\n","Epoch 1/5\n","4/4 [==============================] - 0s 18ms/step - loss: 0.9178 - accuracy: 0.6000\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.7381 - accuracy: 0.6250\n","Epoch 3/5\n","4/4 [==============================] - 0s 20ms/step - loss: 0.6421 - accuracy: 0.7083\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.6877 - accuracy: 0.7083\n","Epoch 5/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.5692 - accuracy: 0.7417\n","Epoch 1/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.9209 - accuracy: 0.7000\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.6265 - accuracy: 0.7333\n","Epoch 3/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.7493 - accuracy: 0.7167\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.6930 - accuracy: 0.6750\n","Epoch 5/5\n","4/4 [==============================] - 0s 16ms/step - loss: 0.5430 - accuracy: 0.7417\n","Epoch 1/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.5733 - accuracy: 0.7583\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.4475 - accuracy: 0.7917\n","Epoch 3/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.4711 - accuracy: 0.8083\n","Epoch 4/5\n","4/4 [==============================] - 0s 16ms/step - loss: 0.4159 - accuracy: 0.8417\n","Epoch 5/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.4352 - accuracy: 0.8500\n","Epoch 1/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.8814 - accuracy: 0.7167\n","Epoch 2/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.6661 - accuracy: 0.7667\n","Epoch 3/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.4882 - accuracy: 0.7667\n","Epoch 4/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.5199 - accuracy: 0.7500\n","Epoch 5/5\n","4/4 [==============================] - 0s 17ms/step - loss: 0.5083 - accuracy: 0.7750\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fba85071730>"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","source":["yj_pred = model.evaluate(yj_audio, yj_label)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rLYfUPs7YMdK","executionInfo":{"status":"ok","timestamp":1677163010805,"user_tz":-540,"elapsed":821,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"0190905f-3322-461f-af15-959018075d96"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 10ms/step - loss: 4.3628 - accuracy: 0.2417\n"]}]},{"cell_type":"code","source":["t = model.predict(yj_audio)\n","print(print(np.argmax(t, axis = 1)))\n","print(np.unique(np.argmax(t, axis =1), return_counts= True))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y1QHeRSnhjJD","executionInfo":{"status":"ok","timestamp":1677163010806,"user_tz":-540,"elapsed":8,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"37c8887f-1be8-4c65-ec87-6534d96977fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 7ms/step\n","[3 2 2 3 2 2 2 2 3 3 0 3 2 0 2 2 0 0 2 3 0 3 0 3 0 2 3 2 2 3 2 0 3 3 2 3 0\n"," 0 2 2 0 2 0 2 3 3 2 2 2 3 0 3 2 0 0 2 0 0 3 3 2 3 2 3 0 3 3 2 2 3 2 0 3 3\n"," 3 3 0 0 0 3 3 2 2 3 2 2 2 2 3 3 0 3 2 0 2 2 0 0 2 0 0 3 0 3 0 2 3 2 2 3 2\n"," 0 3 3 2 3 0 0 2 2]\n","None\n","(array([0, 2, 3]), array([33, 46, 41]))\n"]}]},{"cell_type":"code","source":["# model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/yj_fine_best_3.h5\")"],"metadata":{"id":"pgAJxVQ6m6_s"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["'''\n","yj_straight_pred = model.predict(yj_audio_straight)\n","tmp2 = tf.keras.metrics.top_k_categorical_accuracy(yj_label_straight, yj_straight_pred, k=2)\n","np.sum(tmp2)/len(tmp2) \n","'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J80NT1xGZj0Y","executionInfo":{"status":"ok","timestamp":1677161423318,"user_tz":-540,"elapsed":528,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"640eab94-824e-4c28-fab7-bb8ce950c48e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 7ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["0.30833333333333335"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["!pip install coremltools"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PrnoIHRGcIRr","executionInfo":{"status":"ok","timestamp":1677158561064,"user_tz":-540,"elapsed":5489,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"9493cf33-c2d5-4ae8-fbaf-0c9eaa4439ca"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting coremltools\n","  Downloading coremltools-6.2-cp38-none-manylinux1_x86_64.whl (1.5 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.5/1.5 MB\u001b[0m \u001b[31m21.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: sympy in /usr/local/lib/python3.8/dist-packages (from coremltools) (1.7.1)\n","Requirement already satisfied: numpy>=1.14.5 in /usr/local/lib/python3.8/dist-packages (from coremltools) (1.22.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.8/dist-packages (from coremltools) (4.64.1)\n","Requirement already satisfied: protobuf<=4.0.0,>=3.1.0 in /usr/local/lib/python3.8/dist-packages (from coremltools) (3.19.6)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from coremltools) (23.0)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.8/dist-packages (from sympy->coremltools) (1.2.1)\n","Installing collected packages: coremltools\n","Successfully installed coremltools-6.2\n"]}]},{"cell_type":"code","source":["import coremltools\n","model = tf.keras.models.load_model(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/yj_fine_best_3.h5\")\n","coreml_model = coremltools.converters.convert(model)\n","coreml_model.save(\"/content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/yj_fine_best_3.mlmodel\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"otFdl4lncA0a","executionInfo":{"status":"ok","timestamp":1677162914458,"user_tz":-540,"elapsed":2312,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"f8c43ac0-c01a-4b88-c2f9-da24ec461c78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["Running TensorFlow Graph Passes: 100%|██████████| 6/6 [00:00<00:00, 12.47 passes/s]\n","Converting TF Frontend ==> MIL Ops: 100%|██████████| 57/57 [00:00<00:00, 1708.88 ops/s]\n","Running MIL Common passes: 100%|██████████| 40/40 [00:00<00:00, 703.92 passes/s]\n","Running MIL Clean up passes: 100%|██████████| 11/11 [00:00<00:00, 355.91 passes/s]\n","Translating MIL ==> NeuralNetwork Ops: 100%|██████████| 115/115 [00:00<00:00, 9807.95 ops/s]\n"]}]},{"cell_type":"markdown","source":["## Large CNN Models"],"metadata":{"id":"ncA948ErB9R9"}},{"cell_type":"markdown","source":["### 2) resnet + dense(transfer learning) "],"metadata":{"id":"J_rtQAkbkIVX"}},{"cell_type":"code","source":["# The input must have 3 channels; Received `input_shape=(128, 259, 1)`\n","'''\n","base_model = tf.keras.applications.ResNet50(\n","    include_top=False, # 이게 핵심이래\n","    weights='imagenet',\n","    input_tensor=None,\n","    input_shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]),\n","    pooling='avg',\n",")\n","inputs = Input(shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]))\n","x = base_model(inputs, training = False)\n","x = Flatten()(x)\n","outputs = Dense(5, activation = 'softmax')(x)\n","model_res = tf.keras.Model(inputs, outputs)\n","'''"],"metadata":{"id":"FF2UxaUFlWHl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3) resnet + dense\n"],"metadata":{"id":"k_YDUvfilXuo"}},{"cell_type":"code","source":["base_model = tf.keras.applications.ResNet50(\n","    include_top=True, # 이게 핵심이래\n","    weights=None,\n","    input_tensor=None,\n","    input_shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]),\n","    pooling='avg',\n",")\n","inputs = Input(shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]))\n","x = base_model(inputs, training = False)\n","x = Flatten()(x)\n","outputs = Dense(5, activation = 'softmax')(x)"],"metadata":{"id":"LEVaMoVD9uBE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# compile the model (should be done *after* setting layers to non-trainable)\n","# model_res.compile(optimizer='rmsprop', loss='categorical_crossentropy', metrics = 'accuracy')\n","model_res = tf.keras.Model(inputs, outputs)\n","model_res.compile(optimizer=tf.keras.optimizers.Adam(learning_rate= 0.01), loss='categorical_crossentropy', metrics = 'accuracy')\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n","# train the model on the new data for a few epochs\n","model_res.fit(x_train, y_train, batch_size = 128, epochs = 100, validation_data = (x_test, y_test), callbacks = [early])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9mIJ2UU_KIDQ","executionInfo":{"status":"ok","timestamp":1676260577366,"user_tz":-540,"elapsed":211950,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"7825cf5b-37b3-4114-e6b1-e1157ed52ec6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","42/42 [==============================] - 31s 173ms/step - loss: 1.6026 - accuracy: 0.2147 - val_loss: 1.5850 - val_accuracy: 0.3248\n","Epoch 2/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6025 - accuracy: 0.2199 - val_loss: 1.5943 - val_accuracy: 0.2087\n","Epoch 3/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6021 - accuracy: 0.2221 - val_loss: 1.5868 - val_accuracy: 0.2087\n","Epoch 4/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6022 - accuracy: 0.2208 - val_loss: 1.5937 - val_accuracy: 0.2087\n","Epoch 5/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6017 - accuracy: 0.2240 - val_loss: 1.5888 - val_accuracy: 0.3248\n","Epoch 6/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6025 - accuracy: 0.2241 - val_loss: 1.5874 - val_accuracy: 0.2087\n","Epoch 7/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6024 - accuracy: 0.2184 - val_loss: 1.5906 - val_accuracy: 0.2087\n","Epoch 8/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6021 - accuracy: 0.2266 - val_loss: 1.5908 - val_accuracy: 0.2087\n","Epoch 9/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6025 - accuracy: 0.2236 - val_loss: 1.5844 - val_accuracy: 0.3248\n","Epoch 10/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6024 - accuracy: 0.2230 - val_loss: 1.5922 - val_accuracy: 0.2087\n","Epoch 11/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6023 - accuracy: 0.2240 - val_loss: 1.5900 - val_accuracy: 0.3248\n","Epoch 12/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6024 - accuracy: 0.2221 - val_loss: 1.5884 - val_accuracy: 0.3248\n","Epoch 13/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6026 - accuracy: 0.2225 - val_loss: 1.5880 - val_accuracy: 0.3248\n","Epoch 14/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6025 - accuracy: 0.2215 - val_loss: 1.5919 - val_accuracy: 0.2087\n","Epoch 15/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6016 - accuracy: 0.2305 - val_loss: 1.5843 - val_accuracy: 0.3248\n","Epoch 16/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6025 - accuracy: 0.2137 - val_loss: 1.5870 - val_accuracy: 0.2087\n","Epoch 17/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6016 - accuracy: 0.2251 - val_loss: 1.5934 - val_accuracy: 0.2087\n","Epoch 18/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6026 - accuracy: 0.2243 - val_loss: 1.5838 - val_accuracy: 0.3248\n","Epoch 19/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6022 - accuracy: 0.2292 - val_loss: 1.5845 - val_accuracy: 0.2087\n","Epoch 20/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6017 - accuracy: 0.2256 - val_loss: 1.5817 - val_accuracy: 0.3248\n","Epoch 21/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6025 - accuracy: 0.2135 - val_loss: 1.5857 - val_accuracy: 0.3248\n","Epoch 22/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6020 - accuracy: 0.2260 - val_loss: 1.5900 - val_accuracy: 0.2087\n","Epoch 23/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6018 - accuracy: 0.2266 - val_loss: 1.5981 - val_accuracy: 0.2087\n","Epoch 24/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6023 - accuracy: 0.2221 - val_loss: 1.5895 - val_accuracy: 0.3248\n","Epoch 25/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6025 - accuracy: 0.2176 - val_loss: 1.5907 - val_accuracy: 0.2087\n","Epoch 26/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6021 - accuracy: 0.2243 - val_loss: 1.5952 - val_accuracy: 0.2087\n","Epoch 27/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6023 - accuracy: 0.2253 - val_loss: 1.5980 - val_accuracy: 0.2087\n","Epoch 28/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6017 - accuracy: 0.2161 - val_loss: 1.6038 - val_accuracy: 0.2087\n","Epoch 29/100\n","42/42 [==============================] - 6s 149ms/step - loss: 1.6020 - accuracy: 0.2230 - val_loss: 1.5978 - val_accuracy: 0.1673\n","Epoch 30/100\n","42/42 [==============================] - 6s 148ms/step - loss: 1.6022 - accuracy: 0.2227 - val_loss: 1.6000 - val_accuracy: 0.2087\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f1aa2a93f40>"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["### 4) resnet"],"metadata":{"id":"zq5W03bBnyJ2"}},{"cell_type":"code","source":["res_model = tf.keras.applications.ResNet50(\n","    include_top=True, \n","    weights=None,\n","    input_tensor=None,\n","    input_shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]),\n","    pooling='avg',\n","    classes = 4\n",")\n","res_model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate= 0.001), loss='categorical_crossentropy', metrics = 'accuracy')\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=20)\n","# train the model on the new data for a few epochs\n","res_model.fit(x_train, y_train, batch_size = 128, epochs = 100, validation_data = (x_test, y_test), callbacks = [early])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYNzUOgMoEhI","executionInfo":{"status":"ok","timestamp":1676361076764,"user_tz":-540,"elapsed":286965,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"9320b988-fb10-4197-d994-ee3d473df17f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","158/158 [==============================] - 46s 76ms/step - loss: 0.9074 - accuracy: 0.6807 - val_loss: 1.4558 - val_accuracy: 0.5189\n","Epoch 2/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.5036 - accuracy: 0.8162 - val_loss: 1.7433 - val_accuracy: 0.5776\n","Epoch 3/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.3874 - accuracy: 0.8598 - val_loss: 4.0352 - val_accuracy: 0.4389\n","Epoch 4/100\n","158/158 [==============================] - 11s 67ms/step - loss: 0.3257 - accuracy: 0.8810 - val_loss: 1.3897 - val_accuracy: 0.6509\n","Epoch 5/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.2762 - accuracy: 0.8986 - val_loss: 7.3533 - val_accuracy: 0.4392\n","Epoch 6/100\n","158/158 [==============================] - 10s 65ms/step - loss: 0.2682 - accuracy: 0.9037 - val_loss: 5.0062 - val_accuracy: 0.3923\n","Epoch 7/100\n","158/158 [==============================] - 10s 65ms/step - loss: 0.2061 - accuracy: 0.9251 - val_loss: 2.4513 - val_accuracy: 0.5579\n","Epoch 8/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.1703 - accuracy: 0.9394 - val_loss: 1.7958 - val_accuracy: 0.5827\n","Epoch 9/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.1387 - accuracy: 0.9504 - val_loss: 4.2481 - val_accuracy: 0.5808\n","Epoch 10/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.1396 - accuracy: 0.9494 - val_loss: 4.4888 - val_accuracy: 0.3699\n","Epoch 11/100\n","158/158 [==============================] - 11s 67ms/step - loss: 0.1031 - accuracy: 0.9630 - val_loss: 2.7420 - val_accuracy: 0.6424\n","Epoch 12/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.1127 - accuracy: 0.9593 - val_loss: 8.2881 - val_accuracy: 0.2697\n","Epoch 13/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0878 - accuracy: 0.9681 - val_loss: 3.3756 - val_accuracy: 0.5490\n","Epoch 14/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0912 - accuracy: 0.9676 - val_loss: 2.7320 - val_accuracy: 0.5490\n","Epoch 15/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0680 - accuracy: 0.9760 - val_loss: 2.6677 - val_accuracy: 0.6087\n","Epoch 16/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0945 - accuracy: 0.9662 - val_loss: 8.3097 - val_accuracy: 0.3056\n","Epoch 17/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0806 - accuracy: 0.9698 - val_loss: 4.7897 - val_accuracy: 0.4512\n","Epoch 18/100\n","158/158 [==============================] - 10s 65ms/step - loss: 0.0572 - accuracy: 0.9800 - val_loss: 3.8887 - val_accuracy: 0.5765\n","Epoch 19/100\n","158/158 [==============================] - 10s 65ms/step - loss: 0.0524 - accuracy: 0.9807 - val_loss: 5.3945 - val_accuracy: 0.5391\n","Epoch 20/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0687 - accuracy: 0.9756 - val_loss: 2.8046 - val_accuracy: 0.6265\n","Epoch 21/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0525 - accuracy: 0.9808 - val_loss: 1.7311 - val_accuracy: 0.7252\n","Epoch 22/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0565 - accuracy: 0.9801 - val_loss: 6.1626 - val_accuracy: 0.2586\n","Epoch 23/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0439 - accuracy: 0.9843 - val_loss: 3.9522 - val_accuracy: 0.5454\n","Epoch 24/100\n","158/158 [==============================] - 10s 66ms/step - loss: 0.0598 - accuracy: 0.9784 - val_loss: 1.9902 - val_accuracy: 0.6545\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f41b82a5340>"]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["### 5) ANN for MFCC Features\n","https://www.analyticsvidhya.com/blog/2022/03/implementing-audio-classification-project-using-deep-learning/"],"metadata":{"id":"W0oZMeFr22rg"}},{"cell_type":"code","source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense,Dropout,Activation,Flatten\n","from tensorflow.keras.optimizers import Adam\n","from sklearn import metrics\n","### No of classes\n","num_labels=y_train.shape[1]\n","model=Sequential()\n","###first layer\n","model.add(Dense(100,input_shape=(40,)))\n","model.add(Activation('relu'))\n","model.add(Dropout(0.5))\n","###second layer\n","model.add(Dense(200))\n","model.add(Activation('relu'))\n","model.add(Dropout(0.5))\n","###third layer\n","model.add(Dense(100))\n","model.add(Activation('relu'))\n","model.add(Dropout(0.5))\n","###final layer\n","model.add(Dense(num_labels))\n","model.add(Activation('softmax'))\n","\n","model.compile(loss='categorical_crossentropy',metrics=['accuracy'],optimizer='adam')\n","\n","## Trianing my model\n","from tensorflow.keras.callbacks import ModelCheckpoint\n","from datetime import datetime \n","num_epochs = 500\n","num_batch_size = 32\n","checkpointer = ModelCheckpoint(filepath='./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5', \n","                               verbose=1, save_best_only=True)\n","start = datetime.now()\n","model.fit(x_train, y_train, batch_size=num_batch_size, epochs=num_epochs, validation_data=(x_test, y_test), callbacks=[checkpointer], verbose=1)\n","duration = datetime.now() - start\n","print(\"Training completed in time: \", duration)\n","\n","test_accuracy=model.evaluate(x_test,y_test,verbose=0)\n","print(test_accuracy[1])\n","\n","#model.predict_classes(X_test)\n","predict_x=model.predict(x_test) \n","classes_x=np.argmax(predict_x,axis=1)\n","print(classes_x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zfd5T8I32_wL","executionInfo":{"status":"ok","timestamp":1676279617381,"user_tz":-540,"elapsed":293617,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"90bb51f3-4438-45f4-babd-dfde2802ba78"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/500\n","166/168 [============================>.] - ETA: 0s - loss: 3.6858 - accuracy: 0.2660\n","Epoch 1: val_loss improved from inf to 1.44725, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 2s 5ms/step - loss: 3.6628 - accuracy: 0.2660 - val_loss: 1.4472 - val_accuracy: 0.3911\n","Epoch 2/500\n","153/168 [==========================>...] - ETA: 0s - loss: 1.6397 - accuracy: 0.3190\n","Epoch 2: val_loss did not improve from 1.44725\n","168/168 [==============================] - 1s 3ms/step - loss: 1.6323 - accuracy: 0.3212 - val_loss: 1.4801 - val_accuracy: 0.3635\n","Epoch 3/500\n","153/168 [==========================>...] - ETA: 0s - loss: 1.5106 - accuracy: 0.3366\n","Epoch 3: val_loss improved from 1.44725 to 1.42816, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 3ms/step - loss: 1.5058 - accuracy: 0.3389 - val_loss: 1.4282 - val_accuracy: 0.4140\n","Epoch 4/500\n","156/168 [==========================>...] - ETA: 0s - loss: 1.4337 - accuracy: 0.3578\n","Epoch 4: val_loss improved from 1.42816 to 1.37478, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 3ms/step - loss: 1.4326 - accuracy: 0.3594 - val_loss: 1.3748 - val_accuracy: 0.4219\n","Epoch 5/500\n","167/168 [============================>.] - ETA: 0s - loss: 1.3787 - accuracy: 0.3971\n","Epoch 5: val_loss improved from 1.37478 to 1.36301, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.3779 - accuracy: 0.3977 - val_loss: 1.3630 - val_accuracy: 0.4554\n","Epoch 6/500\n","162/168 [===========================>..] - ETA: 0s - loss: 1.3352 - accuracy: 0.4124\n","Epoch 6: val_loss improved from 1.36301 to 1.30627, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.3329 - accuracy: 0.4135 - val_loss: 1.3063 - val_accuracy: 0.5112\n","Epoch 7/500\n","163/168 [============================>.] - ETA: 0s - loss: 1.2877 - accuracy: 0.4385\n","Epoch 7: val_loss improved from 1.30627 to 1.30077, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.2907 - accuracy: 0.4375 - val_loss: 1.3008 - val_accuracy: 0.5007\n","Epoch 8/500\n","151/168 [=========================>....] - ETA: 0s - loss: 1.2460 - accuracy: 0.4590\n","Epoch 8: val_loss improved from 1.30077 to 1.25004, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.2440 - accuracy: 0.4600 - val_loss: 1.2500 - val_accuracy: 0.5098\n","Epoch 9/500\n","165/168 [============================>.] - ETA: 0s - loss: 1.2401 - accuracy: 0.4695\n","Epoch 9: val_loss did not improve from 1.25004\n","168/168 [==============================] - 1s 3ms/step - loss: 1.2387 - accuracy: 0.4708 - val_loss: 1.2547 - val_accuracy: 0.5112\n","Epoch 10/500\n","154/168 [==========================>...] - ETA: 0s - loss: 1.1853 - accuracy: 0.4834\n","Epoch 10: val_loss did not improve from 1.25004\n","168/168 [==============================] - 1s 3ms/step - loss: 1.1835 - accuracy: 0.4853 - val_loss: 1.2676 - val_accuracy: 0.5098\n","Epoch 11/500\n","154/168 [==========================>...] - ETA: 0s - loss: 1.1638 - accuracy: 0.4978\n","Epoch 11: val_loss did not improve from 1.25004\n","168/168 [==============================] - 1s 3ms/step - loss: 1.1655 - accuracy: 0.4942 - val_loss: 1.2609 - val_accuracy: 0.4941\n","Epoch 12/500\n","154/168 [==========================>...] - ETA: 0s - loss: 1.1374 - accuracy: 0.5095\n","Epoch 12: val_loss did not improve from 1.25004\n","168/168 [==============================] - 1s 3ms/step - loss: 1.1379 - accuracy: 0.5115 - val_loss: 1.2820 - val_accuracy: 0.4875\n","Epoch 13/500\n","152/168 [==========================>...] - ETA: 0s - loss: 1.1047 - accuracy: 0.5319\n","Epoch 13: val_loss improved from 1.25004 to 1.24146, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 3ms/step - loss: 1.1036 - accuracy: 0.5305 - val_loss: 1.2415 - val_accuracy: 0.5000\n","Epoch 14/500\n","155/168 [==========================>...] - ETA: 0s - loss: 1.0825 - accuracy: 0.5371\n","Epoch 14: val_loss improved from 1.24146 to 1.22661, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 3ms/step - loss: 1.0885 - accuracy: 0.5361 - val_loss: 1.2266 - val_accuracy: 0.5020\n","Epoch 15/500\n","153/168 [==========================>...] - ETA: 0s - loss: 1.0620 - accuracy: 0.5447\n","Epoch 15: val_loss improved from 1.22661 to 1.21829, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.0610 - accuracy: 0.5441 - val_loss: 1.2183 - val_accuracy: 0.5026\n","Epoch 16/500\n","153/168 [==========================>...] - ETA: 0s - loss: 1.0478 - accuracy: 0.5541\n","Epoch 16: val_loss improved from 1.21829 to 1.18515, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 3ms/step - loss: 1.0512 - accuracy: 0.5543 - val_loss: 1.1852 - val_accuracy: 0.5269\n","Epoch 17/500\n","151/168 [=========================>....] - ETA: 0s - loss: 1.0388 - accuracy: 0.5602\n","Epoch 17: val_loss did not improve from 1.18515\n","168/168 [==============================] - 1s 3ms/step - loss: 1.0412 - accuracy: 0.5593 - val_loss: 1.2256 - val_accuracy: 0.4790\n","Epoch 18/500\n","167/168 [============================>.] - ETA: 0s - loss: 1.0227 - accuracy: 0.5661\n","Epoch 18: val_loss did not improve from 1.18515\n","168/168 [==============================] - 1s 3ms/step - loss: 1.0216 - accuracy: 0.5658 - val_loss: 1.2502 - val_accuracy: 0.4823\n","Epoch 19/500\n","164/168 [============================>.] - ETA: 0s - loss: 1.0060 - accuracy: 0.5737\n","Epoch 19: val_loss improved from 1.18515 to 1.16822, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 1.0049 - accuracy: 0.5744 - val_loss: 1.1682 - val_accuracy: 0.4921\n","Epoch 20/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.9809 - accuracy: 0.5813\n","Epoch 20: val_loss did not improve from 1.16822\n","168/168 [==============================] - 1s 3ms/step - loss: 0.9790 - accuracy: 0.5813 - val_loss: 1.1850 - val_accuracy: 0.4934\n","Epoch 21/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.9568 - accuracy: 0.5950\n","Epoch 21: val_loss did not improve from 1.16822\n","168/168 [==============================] - 1s 3ms/step - loss: 0.9618 - accuracy: 0.5949 - val_loss: 1.1694 - val_accuracy: 0.5197\n","Epoch 22/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.9368 - accuracy: 0.5983\n","Epoch 22: val_loss improved from 1.16822 to 1.16552, saving model to ./content/drive/MyDrive/Startup_Hackathon_Jarvis/model_weight/ANN.h5\n","168/168 [==============================] - 1s 4ms/step - loss: 0.9369 - accuracy: 0.5975 - val_loss: 1.1655 - val_accuracy: 0.5072\n","Epoch 23/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.9219 - accuracy: 0.6137\n","Epoch 23: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.9243 - accuracy: 0.6124 - val_loss: 1.2088 - val_accuracy: 0.4948\n","Epoch 24/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.9167 - accuracy: 0.6176\n","Epoch 24: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.9138 - accuracy: 0.6196 - val_loss: 1.2314 - val_accuracy: 0.5046\n","Epoch 25/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.9061 - accuracy: 0.6264\n","Epoch 25: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.9019 - accuracy: 0.6267 - val_loss: 1.2177 - val_accuracy: 0.5256\n","Epoch 26/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.8864 - accuracy: 0.6273\n","Epoch 26: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8889 - accuracy: 0.6283 - val_loss: 1.2461 - val_accuracy: 0.5052\n","Epoch 27/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.8860 - accuracy: 0.6326\n","Epoch 27: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8876 - accuracy: 0.6349 - val_loss: 1.2304 - val_accuracy: 0.5138\n","Epoch 28/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.8717 - accuracy: 0.6491\n","Epoch 28: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8734 - accuracy: 0.6471 - val_loss: 1.2463 - val_accuracy: 0.5066\n","Epoch 29/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.8626 - accuracy: 0.6385\n","Epoch 29: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8627 - accuracy: 0.6397 - val_loss: 1.2749 - val_accuracy: 0.5138\n","Epoch 30/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.8481 - accuracy: 0.6581\n","Epoch 30: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8446 - accuracy: 0.6583 - val_loss: 1.3053 - val_accuracy: 0.4731\n","Epoch 31/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.8357 - accuracy: 0.6601\n","Epoch 31: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.8345 - accuracy: 0.6624 - val_loss: 1.3037 - val_accuracy: 0.5000\n","Epoch 32/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.8357 - accuracy: 0.6637\n","Epoch 32: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.8366 - accuracy: 0.6633 - val_loss: 1.2706 - val_accuracy: 0.5066\n","Epoch 33/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.8208 - accuracy: 0.6748\n","Epoch 33: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.8212 - accuracy: 0.6737 - val_loss: 1.3589 - val_accuracy: 0.5138\n","Epoch 34/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.8111 - accuracy: 0.6687\n","Epoch 34: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.8107 - accuracy: 0.6689 - val_loss: 1.3774 - val_accuracy: 0.4639\n","Epoch 35/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.7915 - accuracy: 0.6715\n","Epoch 35: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7925 - accuracy: 0.6711 - val_loss: 1.3787 - val_accuracy: 0.4987\n","Epoch 36/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.7873 - accuracy: 0.6759\n","Epoch 36: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7836 - accuracy: 0.6784 - val_loss: 1.3338 - val_accuracy: 0.5112\n","Epoch 37/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.7922 - accuracy: 0.6813\n","Epoch 37: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7933 - accuracy: 0.6812 - val_loss: 1.3303 - val_accuracy: 0.4823\n","Epoch 38/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.7916 - accuracy: 0.6813\n","Epoch 38: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7963 - accuracy: 0.6782 - val_loss: 1.3231 - val_accuracy: 0.4954\n","Epoch 39/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.7784 - accuracy: 0.6877\n","Epoch 39: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7775 - accuracy: 0.6879 - val_loss: 1.3912 - val_accuracy: 0.4941\n","Epoch 40/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.7739 - accuracy: 0.6839\n","Epoch 40: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.7729 - accuracy: 0.6838 - val_loss: 1.3978 - val_accuracy: 0.4843\n","Epoch 41/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.7512 - accuracy: 0.7024\n","Epoch 41: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.7556 - accuracy: 0.6987 - val_loss: 1.3828 - val_accuracy: 0.4790\n","Epoch 42/500\n","158/168 [===========================>..] - ETA: 0s - loss: 0.7706 - accuracy: 0.6887\n","Epoch 42: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.7708 - accuracy: 0.6875 - val_loss: 1.3215 - val_accuracy: 0.5105\n","Epoch 43/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.7445 - accuracy: 0.7014\n","Epoch 43: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.7447 - accuracy: 0.7020 - val_loss: 1.2967 - val_accuracy: 0.5085\n","Epoch 44/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.7508 - accuracy: 0.7004\n","Epoch 44: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7506 - accuracy: 0.7003 - val_loss: 1.2587 - val_accuracy: 0.5276\n","Epoch 45/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.7511 - accuracy: 0.7051\n","Epoch 45: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7509 - accuracy: 0.7081 - val_loss: 1.3998 - val_accuracy: 0.4954\n","Epoch 46/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.7265 - accuracy: 0.7120\n","Epoch 46: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7308 - accuracy: 0.7093 - val_loss: 1.3510 - val_accuracy: 0.4987\n","Epoch 47/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.7270 - accuracy: 0.7093\n","Epoch 47: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7275 - accuracy: 0.7089 - val_loss: 1.4455 - val_accuracy: 0.4961\n","Epoch 48/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.7236 - accuracy: 0.7123\n","Epoch 48: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7257 - accuracy: 0.7115 - val_loss: 1.3958 - val_accuracy: 0.5223\n","Epoch 49/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.7073 - accuracy: 0.7129\n","Epoch 49: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7081 - accuracy: 0.7134 - val_loss: 1.4033 - val_accuracy: 0.4875\n","Epoch 50/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.7279 - accuracy: 0.7122\n","Epoch 50: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7257 - accuracy: 0.7124 - val_loss: 1.3892 - val_accuracy: 0.4928\n","Epoch 51/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.7066 - accuracy: 0.7210\n","Epoch 51: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7078 - accuracy: 0.7191 - val_loss: 1.3757 - val_accuracy: 0.5013\n","Epoch 52/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.7258 - accuracy: 0.7190\n","Epoch 52: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7252 - accuracy: 0.7193 - val_loss: 1.3629 - val_accuracy: 0.4895\n","Epoch 53/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.7109 - accuracy: 0.7192\n","Epoch 53: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7152 - accuracy: 0.7156 - val_loss: 1.4281 - val_accuracy: 0.4882\n","Epoch 54/500\n","168/168 [==============================] - ETA: 0s - loss: 0.6987 - accuracy: 0.7163\n","Epoch 54: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6987 - accuracy: 0.7163 - val_loss: 1.4350 - val_accuracy: 0.5079\n","Epoch 55/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6810 - accuracy: 0.7322\n","Epoch 55: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6833 - accuracy: 0.7318 - val_loss: 1.4204 - val_accuracy: 0.5059\n","Epoch 56/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.7109 - accuracy: 0.7095\n","Epoch 56: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.7071 - accuracy: 0.7134 - val_loss: 1.4106 - val_accuracy: 0.4888\n","Epoch 57/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6957 - accuracy: 0.7279\n","Epoch 57: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6961 - accuracy: 0.7273 - val_loss: 1.5279 - val_accuracy: 0.5026\n","Epoch 58/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.6920 - accuracy: 0.7242\n","Epoch 58: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6950 - accuracy: 0.7234 - val_loss: 1.4462 - val_accuracy: 0.5144\n","Epoch 59/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.6821 - accuracy: 0.7311\n","Epoch 59: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6809 - accuracy: 0.7316 - val_loss: 1.4975 - val_accuracy: 0.4856\n","Epoch 60/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.7008 - accuracy: 0.7275\n","Epoch 60: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6979 - accuracy: 0.7286 - val_loss: 1.4480 - val_accuracy: 0.5105\n","Epoch 61/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.6774 - accuracy: 0.7308\n","Epoch 61: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6772 - accuracy: 0.7307 - val_loss: 1.4189 - val_accuracy: 0.5052\n","Epoch 62/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.6809 - accuracy: 0.7290\n","Epoch 62: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6809 - accuracy: 0.7297 - val_loss: 1.4002 - val_accuracy: 0.5112\n","Epoch 63/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.6993 - accuracy: 0.7175\n","Epoch 63: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6940 - accuracy: 0.7212 - val_loss: 1.4349 - val_accuracy: 0.4915\n","Epoch 64/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6736 - accuracy: 0.7354\n","Epoch 64: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6754 - accuracy: 0.7359 - val_loss: 1.4328 - val_accuracy: 0.5059\n","Epoch 65/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6866 - accuracy: 0.7310\n","Epoch 65: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6852 - accuracy: 0.7321 - val_loss: 1.4650 - val_accuracy: 0.4987\n","Epoch 66/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6689 - accuracy: 0.7317\n","Epoch 66: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6737 - accuracy: 0.7299 - val_loss: 1.5247 - val_accuracy: 0.4941\n","Epoch 67/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6649 - accuracy: 0.7341\n","Epoch 67: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6630 - accuracy: 0.7331 - val_loss: 1.5278 - val_accuracy: 0.5046\n","Epoch 68/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.6711 - accuracy: 0.7383\n","Epoch 68: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6740 - accuracy: 0.7370 - val_loss: 1.6121 - val_accuracy: 0.4961\n","Epoch 69/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6516 - accuracy: 0.7433\n","Epoch 69: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6561 - accuracy: 0.7411 - val_loss: 1.5845 - val_accuracy: 0.4902\n","Epoch 70/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6743 - accuracy: 0.7399\n","Epoch 70: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6694 - accuracy: 0.7424 - val_loss: 1.4822 - val_accuracy: 0.5171\n","Epoch 71/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.6639 - accuracy: 0.7345\n","Epoch 71: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6696 - accuracy: 0.7342 - val_loss: 1.5800 - val_accuracy: 0.4987\n","Epoch 72/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.6448 - accuracy: 0.7377\n","Epoch 72: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6441 - accuracy: 0.7372 - val_loss: 1.5165 - val_accuracy: 0.5144\n","Epoch 73/500\n","168/168 [==============================] - ETA: 0s - loss: 0.6547 - accuracy: 0.7472\n","Epoch 73: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6547 - accuracy: 0.7472 - val_loss: 1.4831 - val_accuracy: 0.5138\n","Epoch 74/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.6348 - accuracy: 0.7554\n","Epoch 74: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6455 - accuracy: 0.7500 - val_loss: 1.5978 - val_accuracy: 0.4823\n","Epoch 75/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6533 - accuracy: 0.7435\n","Epoch 75: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6549 - accuracy: 0.7426 - val_loss: 1.6387 - val_accuracy: 0.4974\n","Epoch 76/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6410 - accuracy: 0.7490\n","Epoch 76: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6432 - accuracy: 0.7481 - val_loss: 1.5382 - val_accuracy: 0.5138\n","Epoch 77/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6632 - accuracy: 0.7394\n","Epoch 77: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6553 - accuracy: 0.7431 - val_loss: 1.6313 - val_accuracy: 0.4915\n","Epoch 78/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6511 - accuracy: 0.7342\n","Epoch 78: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6528 - accuracy: 0.7349 - val_loss: 1.5467 - val_accuracy: 0.4980\n","Epoch 79/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6368 - accuracy: 0.7612\n","Epoch 79: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6418 - accuracy: 0.7612 - val_loss: 1.4685 - val_accuracy: 0.5013\n","Epoch 80/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6498 - accuracy: 0.7447\n","Epoch 80: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6516 - accuracy: 0.7437 - val_loss: 1.6011 - val_accuracy: 0.4934\n","Epoch 81/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6183 - accuracy: 0.7506\n","Epoch 81: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6200 - accuracy: 0.7491 - val_loss: 1.5448 - val_accuracy: 0.5059\n","Epoch 82/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6386 - accuracy: 0.7533\n","Epoch 82: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6374 - accuracy: 0.7520 - val_loss: 1.4409 - val_accuracy: 0.5052\n","Epoch 83/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.6339 - accuracy: 0.7531\n","Epoch 83: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6291 - accuracy: 0.7543 - val_loss: 1.5393 - val_accuracy: 0.4987\n","Epoch 84/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.6419 - accuracy: 0.7498\n","Epoch 84: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6433 - accuracy: 0.7498 - val_loss: 1.4980 - val_accuracy: 0.5144\n","Epoch 85/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.6341 - accuracy: 0.7537\n","Epoch 85: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6333 - accuracy: 0.7543 - val_loss: 1.5110 - val_accuracy: 0.5118\n","Epoch 86/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6403 - accuracy: 0.7528\n","Epoch 86: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6362 - accuracy: 0.7533 - val_loss: 1.5984 - val_accuracy: 0.5125\n","Epoch 87/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6057 - accuracy: 0.7637\n","Epoch 87: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6091 - accuracy: 0.7630 - val_loss: 1.5151 - val_accuracy: 0.5059\n","Epoch 88/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6566 - accuracy: 0.7465\n","Epoch 88: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6520 - accuracy: 0.7472 - val_loss: 1.5580 - val_accuracy: 0.5151\n","Epoch 89/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6291 - accuracy: 0.7561\n","Epoch 89: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6301 - accuracy: 0.7532 - val_loss: 1.5680 - val_accuracy: 0.5118\n","Epoch 90/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.6071 - accuracy: 0.7578\n","Epoch 90: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6161 - accuracy: 0.7561 - val_loss: 1.5556 - val_accuracy: 0.5276\n","Epoch 91/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.6347 - accuracy: 0.7596\n","Epoch 91: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6327 - accuracy: 0.7584 - val_loss: 1.5577 - val_accuracy: 0.5105\n","Epoch 92/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6108 - accuracy: 0.7595\n","Epoch 92: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6153 - accuracy: 0.7586 - val_loss: 1.5568 - val_accuracy: 0.4915\n","Epoch 93/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6230 - accuracy: 0.7599\n","Epoch 93: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6212 - accuracy: 0.7599 - val_loss: 1.3915 - val_accuracy: 0.5171\n","Epoch 94/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.6183 - accuracy: 0.7622\n","Epoch 94: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6182 - accuracy: 0.7612 - val_loss: 1.3844 - val_accuracy: 0.5315\n","Epoch 95/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6162 - accuracy: 0.7570\n","Epoch 95: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6131 - accuracy: 0.7602 - val_loss: 1.4699 - val_accuracy: 0.5400\n","Epoch 96/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5915 - accuracy: 0.7688\n","Epoch 96: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5979 - accuracy: 0.7669 - val_loss: 1.5607 - val_accuracy: 0.5203\n","Epoch 97/500\n","168/168 [==============================] - ETA: 0s - loss: 0.6123 - accuracy: 0.7641\n","Epoch 97: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6123 - accuracy: 0.7641 - val_loss: 1.5962 - val_accuracy: 0.5026\n","Epoch 98/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.6173 - accuracy: 0.7541\n","Epoch 98: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6161 - accuracy: 0.7545 - val_loss: 1.5998 - val_accuracy: 0.5138\n","Epoch 99/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6064 - accuracy: 0.7576\n","Epoch 99: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6061 - accuracy: 0.7604 - val_loss: 1.5777 - val_accuracy: 0.5046\n","Epoch 100/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6114 - accuracy: 0.7613\n","Epoch 100: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6119 - accuracy: 0.7613 - val_loss: 1.6465 - val_accuracy: 0.5098\n","Epoch 101/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.6146 - accuracy: 0.7653\n","Epoch 101: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6141 - accuracy: 0.7660 - val_loss: 1.5933 - val_accuracy: 0.4967\n","Epoch 102/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.6025 - accuracy: 0.7708\n","Epoch 102: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6031 - accuracy: 0.7695 - val_loss: 1.4647 - val_accuracy: 0.5236\n","Epoch 103/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6021 - accuracy: 0.7642\n","Epoch 103: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6017 - accuracy: 0.7619 - val_loss: 1.4757 - val_accuracy: 0.5000\n","Epoch 104/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5910 - accuracy: 0.7618\n","Epoch 104: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6016 - accuracy: 0.7586 - val_loss: 1.6033 - val_accuracy: 0.5164\n","Epoch 105/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.6114 - accuracy: 0.7629\n","Epoch 105: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6120 - accuracy: 0.7625 - val_loss: 1.5286 - val_accuracy: 0.5118\n","Epoch 106/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.6016 - accuracy: 0.7650\n","Epoch 106: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6010 - accuracy: 0.7651 - val_loss: 1.5425 - val_accuracy: 0.5026\n","Epoch 107/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5912 - accuracy: 0.7718\n","Epoch 107: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5939 - accuracy: 0.7688 - val_loss: 1.4850 - val_accuracy: 0.5177\n","Epoch 108/500\n","158/168 [===========================>..] - ETA: 0s - loss: 0.6059 - accuracy: 0.7640\n","Epoch 108: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6029 - accuracy: 0.7666 - val_loss: 1.4749 - val_accuracy: 0.5112\n","Epoch 109/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.6323 - accuracy: 0.7544\n","Epoch 109: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6317 - accuracy: 0.7545 - val_loss: 1.4387 - val_accuracy: 0.5302\n","Epoch 110/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.6048 - accuracy: 0.7653\n","Epoch 110: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.6075 - accuracy: 0.7647 - val_loss: 1.5246 - val_accuracy: 0.5092\n","Epoch 111/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5932 - accuracy: 0.7694\n","Epoch 111: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5935 - accuracy: 0.7686 - val_loss: 1.5265 - val_accuracy: 0.5079\n","Epoch 112/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5910 - accuracy: 0.7675\n","Epoch 112: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5886 - accuracy: 0.7688 - val_loss: 1.5509 - val_accuracy: 0.5026\n","Epoch 113/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5919 - accuracy: 0.7730\n","Epoch 113: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5899 - accuracy: 0.7742 - val_loss: 1.5514 - val_accuracy: 0.5105\n","Epoch 114/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.5999 - accuracy: 0.7653\n","Epoch 114: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5980 - accuracy: 0.7664 - val_loss: 1.5428 - val_accuracy: 0.4862\n","Epoch 115/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6008 - accuracy: 0.7621\n","Epoch 115: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5963 - accuracy: 0.7656 - val_loss: 1.5330 - val_accuracy: 0.5052\n","Epoch 116/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5728 - accuracy: 0.7806\n","Epoch 116: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5783 - accuracy: 0.7792 - val_loss: 1.5753 - val_accuracy: 0.5059\n","Epoch 117/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5836 - accuracy: 0.7700\n","Epoch 117: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5825 - accuracy: 0.7708 - val_loss: 1.6327 - val_accuracy: 0.4862\n","Epoch 118/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.6138 - accuracy: 0.7664\n","Epoch 118: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6091 - accuracy: 0.7686 - val_loss: 1.4767 - val_accuracy: 0.5125\n","Epoch 119/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5984 - accuracy: 0.7649\n","Epoch 119: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5969 - accuracy: 0.7651 - val_loss: 1.5736 - val_accuracy: 0.5026\n","Epoch 120/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5736 - accuracy: 0.7794\n","Epoch 120: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5742 - accuracy: 0.7753 - val_loss: 1.5534 - val_accuracy: 0.5007\n","Epoch 121/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5952 - accuracy: 0.7724\n","Epoch 121: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5966 - accuracy: 0.7721 - val_loss: 1.6798 - val_accuracy: 0.4941\n","Epoch 122/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5905 - accuracy: 0.7745\n","Epoch 122: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5968 - accuracy: 0.7727 - val_loss: 1.5457 - val_accuracy: 0.5098\n","Epoch 123/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.5828 - accuracy: 0.7735\n","Epoch 123: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5873 - accuracy: 0.7731 - val_loss: 1.6488 - val_accuracy: 0.4849\n","Epoch 124/500\n","158/168 [===========================>..] - ETA: 0s - loss: 0.5788 - accuracy: 0.7700\n","Epoch 124: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5803 - accuracy: 0.7679 - val_loss: 1.5089 - val_accuracy: 0.4954\n","Epoch 125/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5762 - accuracy: 0.7783\n","Epoch 125: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5774 - accuracy: 0.7777 - val_loss: 1.5598 - val_accuracy: 0.5026\n","Epoch 126/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5945 - accuracy: 0.7708\n","Epoch 126: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5945 - accuracy: 0.7708 - val_loss: 1.5123 - val_accuracy: 0.5066\n","Epoch 127/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5808 - accuracy: 0.7714\n","Epoch 127: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5801 - accuracy: 0.7712 - val_loss: 1.6050 - val_accuracy: 0.5112\n","Epoch 128/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5727 - accuracy: 0.7686\n","Epoch 128: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5766 - accuracy: 0.7684 - val_loss: 1.5192 - val_accuracy: 0.5197\n","Epoch 129/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5778 - accuracy: 0.7740\n","Epoch 129: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5831 - accuracy: 0.7749 - val_loss: 1.5248 - val_accuracy: 0.5013\n","Epoch 130/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5641 - accuracy: 0.7802\n","Epoch 130: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5653 - accuracy: 0.7783 - val_loss: 1.5985 - val_accuracy: 0.5157\n","Epoch 131/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5812 - accuracy: 0.7765\n","Epoch 131: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5812 - accuracy: 0.7762 - val_loss: 1.5075 - val_accuracy: 0.5217\n","Epoch 132/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5672 - accuracy: 0.7807\n","Epoch 132: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5680 - accuracy: 0.7807 - val_loss: 1.5801 - val_accuracy: 0.5157\n","Epoch 133/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5930 - accuracy: 0.7748\n","Epoch 133: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5941 - accuracy: 0.7742 - val_loss: 1.4973 - val_accuracy: 0.4980\n","Epoch 134/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5842 - accuracy: 0.7744\n","Epoch 134: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5842 - accuracy: 0.7744 - val_loss: 1.5633 - val_accuracy: 0.5092\n","Epoch 135/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5840 - accuracy: 0.7710\n","Epoch 135: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5825 - accuracy: 0.7719 - val_loss: 1.4839 - val_accuracy: 0.4869\n","Epoch 136/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.6041 - accuracy: 0.7707\n","Epoch 136: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.6010 - accuracy: 0.7710 - val_loss: 1.5889 - val_accuracy: 0.4915\n","Epoch 137/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5689 - accuracy: 0.7759\n","Epoch 137: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5719 - accuracy: 0.7766 - val_loss: 1.5657 - val_accuracy: 0.5092\n","Epoch 138/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5935 - accuracy: 0.7726\n","Epoch 138: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5930 - accuracy: 0.7714 - val_loss: 1.4635 - val_accuracy: 0.5098\n","Epoch 139/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5728 - accuracy: 0.7757\n","Epoch 139: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5674 - accuracy: 0.7783 - val_loss: 1.5299 - val_accuracy: 0.5066\n","Epoch 140/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5813 - accuracy: 0.7710\n","Epoch 140: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5769 - accuracy: 0.7736 - val_loss: 1.4823 - val_accuracy: 0.5072\n","Epoch 141/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5660 - accuracy: 0.7852\n","Epoch 141: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5656 - accuracy: 0.7852 - val_loss: 1.4699 - val_accuracy: 0.5033\n","Epoch 142/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5835 - accuracy: 0.7766\n","Epoch 142: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5839 - accuracy: 0.7770 - val_loss: 1.5065 - val_accuracy: 0.5098\n","Epoch 143/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5765 - accuracy: 0.7764\n","Epoch 143: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5759 - accuracy: 0.7760 - val_loss: 1.5565 - val_accuracy: 0.4993\n","Epoch 144/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5697 - accuracy: 0.7827\n","Epoch 144: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5710 - accuracy: 0.7822 - val_loss: 1.5287 - val_accuracy: 0.5059\n","Epoch 145/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5568 - accuracy: 0.7839\n","Epoch 145: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5552 - accuracy: 0.7848 - val_loss: 1.5590 - val_accuracy: 0.5079\n","Epoch 146/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5736 - accuracy: 0.7794\n","Epoch 146: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5748 - accuracy: 0.7783 - val_loss: 1.6123 - val_accuracy: 0.4961\n","Epoch 147/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5877 - accuracy: 0.7728\n","Epoch 147: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5864 - accuracy: 0.7729 - val_loss: 1.5005 - val_accuracy: 0.4948\n","Epoch 148/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5690 - accuracy: 0.7762\n","Epoch 148: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5677 - accuracy: 0.7760 - val_loss: 1.5607 - val_accuracy: 0.5131\n","Epoch 149/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5565 - accuracy: 0.7856\n","Epoch 149: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5547 - accuracy: 0.7861 - val_loss: 1.5894 - val_accuracy: 0.5144\n","Epoch 150/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5653 - accuracy: 0.7821\n","Epoch 150: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5661 - accuracy: 0.7816 - val_loss: 1.5948 - val_accuracy: 0.4987\n","Epoch 151/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5619 - accuracy: 0.7861\n","Epoch 151: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5621 - accuracy: 0.7859 - val_loss: 1.6206 - val_accuracy: 0.4921\n","Epoch 152/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5726 - accuracy: 0.7807\n","Epoch 152: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5726 - accuracy: 0.7807 - val_loss: 1.6497 - val_accuracy: 0.4810\n","Epoch 153/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5618 - accuracy: 0.7790\n","Epoch 153: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5618 - accuracy: 0.7790 - val_loss: 1.6226 - val_accuracy: 0.4967\n","Epoch 154/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.5775 - accuracy: 0.7770\n","Epoch 154: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5753 - accuracy: 0.7788 - val_loss: 1.6009 - val_accuracy: 0.5046\n","Epoch 155/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5544 - accuracy: 0.7856\n","Epoch 155: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5543 - accuracy: 0.7866 - val_loss: 1.6071 - val_accuracy: 0.5046\n","Epoch 156/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5575 - accuracy: 0.7856\n","Epoch 156: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5583 - accuracy: 0.7859 - val_loss: 1.6076 - val_accuracy: 0.5052\n","Epoch 157/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5699 - accuracy: 0.7809\n","Epoch 157: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5696 - accuracy: 0.7805 - val_loss: 1.4818 - val_accuracy: 0.5066\n","Epoch 158/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5621 - accuracy: 0.7784\n","Epoch 158: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5626 - accuracy: 0.7781 - val_loss: 1.4936 - val_accuracy: 0.5046\n","Epoch 159/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5620 - accuracy: 0.7797\n","Epoch 159: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5616 - accuracy: 0.7799 - val_loss: 1.6293 - val_accuracy: 0.4895\n","Epoch 160/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5856 - accuracy: 0.7766\n","Epoch 160: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5850 - accuracy: 0.7770 - val_loss: 1.4488 - val_accuracy: 0.4967\n","Epoch 161/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5509 - accuracy: 0.7915\n","Epoch 161: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5559 - accuracy: 0.7919 - val_loss: 1.6683 - val_accuracy: 0.4797\n","Epoch 162/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5759 - accuracy: 0.7819\n","Epoch 162: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5734 - accuracy: 0.7824 - val_loss: 1.4614 - val_accuracy: 0.4980\n","Epoch 163/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5374 - accuracy: 0.7850\n","Epoch 163: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5386 - accuracy: 0.7850 - val_loss: 1.5123 - val_accuracy: 0.5052\n","Epoch 164/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5602 - accuracy: 0.7854\n","Epoch 164: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5579 - accuracy: 0.7879 - val_loss: 1.5983 - val_accuracy: 0.4941\n","Epoch 165/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5769 - accuracy: 0.7773\n","Epoch 165: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5772 - accuracy: 0.7775 - val_loss: 1.5930 - val_accuracy: 0.4902\n","Epoch 166/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5764 - accuracy: 0.7815\n","Epoch 166: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5783 - accuracy: 0.7822 - val_loss: 1.5590 - val_accuracy: 0.4928\n","Epoch 167/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5595 - accuracy: 0.7786\n","Epoch 167: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5606 - accuracy: 0.7781 - val_loss: 1.6413 - val_accuracy: 0.4934\n","Epoch 168/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5755 - accuracy: 0.7843\n","Epoch 168: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5744 - accuracy: 0.7846 - val_loss: 1.6236 - val_accuracy: 0.4902\n","Epoch 169/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5573 - accuracy: 0.7891\n","Epoch 169: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5523 - accuracy: 0.7911 - val_loss: 1.6127 - val_accuracy: 0.4862\n","Epoch 170/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5444 - accuracy: 0.7850\n","Epoch 170: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5532 - accuracy: 0.7826 - val_loss: 1.6280 - val_accuracy: 0.5033\n","Epoch 171/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5660 - accuracy: 0.7823\n","Epoch 171: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5644 - accuracy: 0.7824 - val_loss: 1.6411 - val_accuracy: 0.5046\n","Epoch 172/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5528 - accuracy: 0.7864\n","Epoch 172: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5552 - accuracy: 0.7855 - val_loss: 1.5644 - val_accuracy: 0.5026\n","Epoch 173/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5532 - accuracy: 0.7831\n","Epoch 173: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5554 - accuracy: 0.7824 - val_loss: 1.4922 - val_accuracy: 0.4987\n","Epoch 174/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5336 - accuracy: 0.7939\n","Epoch 174: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5317 - accuracy: 0.7956 - val_loss: 1.5585 - val_accuracy: 0.5007\n","Epoch 175/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5534 - accuracy: 0.7903\n","Epoch 175: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5512 - accuracy: 0.7909 - val_loss: 1.5216 - val_accuracy: 0.5131\n","Epoch 176/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5367 - accuracy: 0.7858\n","Epoch 176: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5375 - accuracy: 0.7863 - val_loss: 1.4584 - val_accuracy: 0.5079\n","Epoch 177/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5516 - accuracy: 0.7904\n","Epoch 177: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5516 - accuracy: 0.7900 - val_loss: 1.5527 - val_accuracy: 0.5072\n","Epoch 178/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5509 - accuracy: 0.7896\n","Epoch 178: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5450 - accuracy: 0.7900 - val_loss: 1.6298 - val_accuracy: 0.4941\n","Epoch 179/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5577 - accuracy: 0.7800\n","Epoch 179: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5610 - accuracy: 0.7798 - val_loss: 1.5862 - val_accuracy: 0.5020\n","Epoch 180/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5580 - accuracy: 0.7857\n","Epoch 180: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5602 - accuracy: 0.7850 - val_loss: 1.5899 - val_accuracy: 0.4961\n","Epoch 181/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5514 - accuracy: 0.7866\n","Epoch 181: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5519 - accuracy: 0.7898 - val_loss: 1.6599 - val_accuracy: 0.5013\n","Epoch 182/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5379 - accuracy: 0.7887\n","Epoch 182: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5425 - accuracy: 0.7872 - val_loss: 1.6049 - val_accuracy: 0.4902\n","Epoch 183/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5441 - accuracy: 0.7857\n","Epoch 183: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5411 - accuracy: 0.7852 - val_loss: 1.5954 - val_accuracy: 0.4987\n","Epoch 184/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5628 - accuracy: 0.7880\n","Epoch 184: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5620 - accuracy: 0.7885 - val_loss: 1.6006 - val_accuracy: 0.4941\n","Epoch 185/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5393 - accuracy: 0.7912\n","Epoch 185: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5441 - accuracy: 0.7902 - val_loss: 1.6459 - val_accuracy: 0.4869\n","Epoch 186/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.5625 - accuracy: 0.7863\n","Epoch 186: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5623 - accuracy: 0.7868 - val_loss: 1.6044 - val_accuracy: 0.4869\n","Epoch 187/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5397 - accuracy: 0.7878\n","Epoch 187: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5381 - accuracy: 0.7881 - val_loss: 1.6282 - val_accuracy: 0.5197\n","Epoch 188/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.5459 - accuracy: 0.7914\n","Epoch 188: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5479 - accuracy: 0.7900 - val_loss: 1.6465 - val_accuracy: 0.4934\n","Epoch 189/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5602 - accuracy: 0.7788\n","Epoch 189: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5582 - accuracy: 0.7794 - val_loss: 1.6680 - val_accuracy: 0.5033\n","Epoch 190/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5672 - accuracy: 0.7790\n","Epoch 190: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5650 - accuracy: 0.7811 - val_loss: 1.6009 - val_accuracy: 0.4921\n","Epoch 191/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5466 - accuracy: 0.7909\n","Epoch 191: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5490 - accuracy: 0.7900 - val_loss: 1.5765 - val_accuracy: 0.4948\n","Epoch 192/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5400 - accuracy: 0.7915\n","Epoch 192: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5379 - accuracy: 0.7933 - val_loss: 1.4776 - val_accuracy: 0.4902\n","Epoch 193/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5410 - accuracy: 0.7947\n","Epoch 193: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5447 - accuracy: 0.7954 - val_loss: 1.5565 - val_accuracy: 0.5020\n","Epoch 194/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5555 - accuracy: 0.7904\n","Epoch 194: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5570 - accuracy: 0.7917 - val_loss: 1.5461 - val_accuracy: 0.5000\n","Epoch 195/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5588 - accuracy: 0.7866\n","Epoch 195: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5588 - accuracy: 0.7866 - val_loss: 1.4999 - val_accuracy: 0.5059\n","Epoch 196/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5550 - accuracy: 0.7889\n","Epoch 196: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5510 - accuracy: 0.7887 - val_loss: 1.4722 - val_accuracy: 0.5092\n","Epoch 197/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5348 - accuracy: 0.7957\n","Epoch 197: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5358 - accuracy: 0.7939 - val_loss: 1.5370 - val_accuracy: 0.5020\n","Epoch 198/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5303 - accuracy: 0.7931\n","Epoch 198: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5299 - accuracy: 0.7917 - val_loss: 1.4465 - val_accuracy: 0.5243\n","Epoch 199/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5283 - accuracy: 0.7930\n","Epoch 199: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5299 - accuracy: 0.7932 - val_loss: 1.6522 - val_accuracy: 0.4974\n","Epoch 200/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5486 - accuracy: 0.7881\n","Epoch 200: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5460 - accuracy: 0.7876 - val_loss: 1.6079 - val_accuracy: 0.4961\n","Epoch 201/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5340 - accuracy: 0.7976\n","Epoch 201: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5334 - accuracy: 0.7969 - val_loss: 1.5501 - val_accuracy: 0.4902\n","Epoch 202/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5290 - accuracy: 0.7913\n","Epoch 202: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5317 - accuracy: 0.7909 - val_loss: 1.5250 - val_accuracy: 0.5000\n","Epoch 203/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5367 - accuracy: 0.7994\n","Epoch 203: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5357 - accuracy: 0.7991 - val_loss: 1.5729 - val_accuracy: 0.4941\n","Epoch 204/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5384 - accuracy: 0.7962\n","Epoch 204: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5360 - accuracy: 0.7950 - val_loss: 1.6149 - val_accuracy: 0.5092\n","Epoch 205/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5493 - accuracy: 0.7852\n","Epoch 205: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5526 - accuracy: 0.7848 - val_loss: 1.5280 - val_accuracy: 0.4908\n","Epoch 206/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5258 - accuracy: 0.7877\n","Epoch 206: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5283 - accuracy: 0.7872 - val_loss: 1.5851 - val_accuracy: 0.5079\n","Epoch 207/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5438 - accuracy: 0.7950\n","Epoch 207: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5430 - accuracy: 0.7958 - val_loss: 1.3805 - val_accuracy: 0.5079\n","Epoch 208/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5420 - accuracy: 0.7902\n","Epoch 208: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5441 - accuracy: 0.7906 - val_loss: 1.5080 - val_accuracy: 0.4908\n","Epoch 209/500\n","158/168 [===========================>..] - ETA: 0s - loss: 0.5332 - accuracy: 0.7915\n","Epoch 209: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5357 - accuracy: 0.7904 - val_loss: 1.5604 - val_accuracy: 0.4954\n","Epoch 210/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5481 - accuracy: 0.7890\n","Epoch 210: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5518 - accuracy: 0.7885 - val_loss: 1.4965 - val_accuracy: 0.4967\n","Epoch 211/500\n","149/168 [=========================>....] - ETA: 0s - loss: 0.5352 - accuracy: 0.7930\n","Epoch 211: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5332 - accuracy: 0.7937 - val_loss: 1.6360 - val_accuracy: 0.4902\n","Epoch 212/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5273 - accuracy: 0.7981\n","Epoch 212: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5234 - accuracy: 0.7995 - val_loss: 1.6248 - val_accuracy: 0.4967\n","Epoch 213/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5328 - accuracy: 0.7876\n","Epoch 213: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5295 - accuracy: 0.7885 - val_loss: 1.6892 - val_accuracy: 0.4856\n","Epoch 214/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5558 - accuracy: 0.7884\n","Epoch 214: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5523 - accuracy: 0.7896 - val_loss: 1.5509 - val_accuracy: 0.4961\n","Epoch 215/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5386 - accuracy: 0.7951\n","Epoch 215: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5378 - accuracy: 0.7969 - val_loss: 1.6313 - val_accuracy: 0.4783\n","Epoch 216/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5393 - accuracy: 0.7955\n","Epoch 216: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5416 - accuracy: 0.7939 - val_loss: 1.6007 - val_accuracy: 0.4869\n","Epoch 217/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5232 - accuracy: 0.7984\n","Epoch 217: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5222 - accuracy: 0.7989 - val_loss: 1.6649 - val_accuracy: 0.5026\n","Epoch 218/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5404 - accuracy: 0.7915\n","Epoch 218: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5409 - accuracy: 0.7920 - val_loss: 1.4449 - val_accuracy: 0.5020\n","Epoch 219/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5473 - accuracy: 0.7903\n","Epoch 219: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5466 - accuracy: 0.7892 - val_loss: 1.5627 - val_accuracy: 0.4967\n","Epoch 220/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5395 - accuracy: 0.7890\n","Epoch 220: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5420 - accuracy: 0.7894 - val_loss: 1.6347 - val_accuracy: 0.4882\n","Epoch 221/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5120 - accuracy: 0.8003\n","Epoch 221: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5123 - accuracy: 0.7991 - val_loss: 1.6163 - val_accuracy: 0.5059\n","Epoch 222/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5333 - accuracy: 0.7972\n","Epoch 222: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5355 - accuracy: 0.7967 - val_loss: 1.5749 - val_accuracy: 0.4987\n","Epoch 223/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.5316 - accuracy: 0.7982\n","Epoch 223: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5327 - accuracy: 0.7985 - val_loss: 1.6440 - val_accuracy: 0.4875\n","Epoch 224/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5275 - accuracy: 0.7955\n","Epoch 224: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5318 - accuracy: 0.7933 - val_loss: 1.4952 - val_accuracy: 0.4803\n","Epoch 225/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5517 - accuracy: 0.7841\n","Epoch 225: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5537 - accuracy: 0.7839 - val_loss: 1.5957 - val_accuracy: 0.5007\n","Epoch 226/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5128 - accuracy: 0.8033\n","Epoch 226: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5140 - accuracy: 0.8026 - val_loss: 1.5323 - val_accuracy: 0.4915\n","Epoch 227/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5503 - accuracy: 0.7912\n","Epoch 227: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5539 - accuracy: 0.7902 - val_loss: 1.4816 - val_accuracy: 0.5046\n","Epoch 228/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5321 - accuracy: 0.7989\n","Epoch 228: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5321 - accuracy: 0.7989 - val_loss: 1.5598 - val_accuracy: 0.5105\n","Epoch 229/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5355 - accuracy: 0.7921\n","Epoch 229: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5330 - accuracy: 0.7945 - val_loss: 1.5257 - val_accuracy: 0.4993\n","Epoch 230/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5279 - accuracy: 0.7965\n","Epoch 230: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5276 - accuracy: 0.7959 - val_loss: 1.4637 - val_accuracy: 0.5046\n","Epoch 231/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5148 - accuracy: 0.7994\n","Epoch 231: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5198 - accuracy: 0.7982 - val_loss: 1.5623 - val_accuracy: 0.5098\n","Epoch 232/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5442 - accuracy: 0.7879\n","Epoch 232: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5483 - accuracy: 0.7878 - val_loss: 1.5261 - val_accuracy: 0.5092\n","Epoch 233/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5446 - accuracy: 0.7890\n","Epoch 233: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5468 - accuracy: 0.7883 - val_loss: 1.5211 - val_accuracy: 0.4961\n","Epoch 234/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5116 - accuracy: 0.8065\n","Epoch 234: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5117 - accuracy: 0.8056 - val_loss: 1.6692 - val_accuracy: 0.4954\n","Epoch 235/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5312 - accuracy: 0.7991\n","Epoch 235: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5275 - accuracy: 0.8002 - val_loss: 1.5008 - val_accuracy: 0.4974\n","Epoch 236/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5322 - accuracy: 0.7917\n","Epoch 236: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5361 - accuracy: 0.7876 - val_loss: 1.5991 - val_accuracy: 0.4961\n","Epoch 237/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5451 - accuracy: 0.7923\n","Epoch 237: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5468 - accuracy: 0.7920 - val_loss: 1.4881 - val_accuracy: 0.4974\n","Epoch 238/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5113 - accuracy: 0.8028\n","Epoch 238: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5091 - accuracy: 0.8056 - val_loss: 1.6490 - val_accuracy: 0.4921\n","Epoch 239/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5296 - accuracy: 0.7894\n","Epoch 239: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5314 - accuracy: 0.7902 - val_loss: 1.5717 - val_accuracy: 0.4967\n","Epoch 240/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5201 - accuracy: 0.8045\n","Epoch 240: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5232 - accuracy: 0.8030 - val_loss: 1.5525 - val_accuracy: 0.5059\n","Epoch 241/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5345 - accuracy: 0.7880\n","Epoch 241: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5360 - accuracy: 0.7866 - val_loss: 1.5926 - val_accuracy: 0.5039\n","Epoch 242/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5389 - accuracy: 0.7929\n","Epoch 242: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5404 - accuracy: 0.7932 - val_loss: 1.6504 - val_accuracy: 0.4993\n","Epoch 243/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5191 - accuracy: 0.7995\n","Epoch 243: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5209 - accuracy: 0.7984 - val_loss: 1.6435 - val_accuracy: 0.4941\n","Epoch 244/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5071 - accuracy: 0.8031\n","Epoch 244: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5128 - accuracy: 0.8026 - val_loss: 1.6200 - val_accuracy: 0.5026\n","Epoch 245/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5250 - accuracy: 0.8058\n","Epoch 245: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5259 - accuracy: 0.8038 - val_loss: 1.6680 - val_accuracy: 0.5033\n","Epoch 246/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5099 - accuracy: 0.8009\n","Epoch 246: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5118 - accuracy: 0.8002 - val_loss: 1.6080 - val_accuracy: 0.5079\n","Epoch 247/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5320 - accuracy: 0.7915\n","Epoch 247: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5380 - accuracy: 0.7881 - val_loss: 1.6475 - val_accuracy: 0.5007\n","Epoch 248/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5103 - accuracy: 0.8088\n","Epoch 248: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5152 - accuracy: 0.8065 - val_loss: 1.6669 - val_accuracy: 0.4908\n","Epoch 249/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4912 - accuracy: 0.8066\n","Epoch 249: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4970 - accuracy: 0.8060 - val_loss: 1.6751 - val_accuracy: 0.4961\n","Epoch 250/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5184 - accuracy: 0.8011\n","Epoch 250: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5185 - accuracy: 0.8026 - val_loss: 1.6913 - val_accuracy: 0.4895\n","Epoch 251/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5233 - accuracy: 0.8049\n","Epoch 251: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5224 - accuracy: 0.8051 - val_loss: 1.6909 - val_accuracy: 0.4836\n","Epoch 252/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5187 - accuracy: 0.8021\n","Epoch 252: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5330 - accuracy: 0.7980 - val_loss: 1.4755 - val_accuracy: 0.4948\n","Epoch 253/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5236 - accuracy: 0.7959\n","Epoch 253: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5242 - accuracy: 0.7952 - val_loss: 1.7082 - val_accuracy: 0.4934\n","Epoch 254/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5344 - accuracy: 0.7974\n","Epoch 254: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5318 - accuracy: 0.7985 - val_loss: 1.6292 - val_accuracy: 0.4895\n","Epoch 255/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5062 - accuracy: 0.8101\n","Epoch 255: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5093 - accuracy: 0.8071 - val_loss: 1.5636 - val_accuracy: 0.4974\n","Epoch 256/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5122 - accuracy: 0.8063\n","Epoch 256: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5190 - accuracy: 0.8039 - val_loss: 1.6298 - val_accuracy: 0.4875\n","Epoch 257/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5363 - accuracy: 0.7990\n","Epoch 257: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5381 - accuracy: 0.7982 - val_loss: 1.5957 - val_accuracy: 0.4961\n","Epoch 258/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5452 - accuracy: 0.7959\n","Epoch 258: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5452 - accuracy: 0.7959 - val_loss: 1.5894 - val_accuracy: 0.5039\n","Epoch 259/500\n","160/168 [===========================>..] - ETA: 0s - loss: 0.5286 - accuracy: 0.8006\n","Epoch 259: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5302 - accuracy: 0.8000 - val_loss: 1.5310 - val_accuracy: 0.5072\n","Epoch 260/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5060 - accuracy: 0.8053\n","Epoch 260: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5075 - accuracy: 0.8062 - val_loss: 1.6455 - val_accuracy: 0.4888\n","Epoch 261/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5322 - accuracy: 0.7993\n","Epoch 261: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5314 - accuracy: 0.7982 - val_loss: 1.5019 - val_accuracy: 0.4967\n","Epoch 262/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5345 - accuracy: 0.7976\n","Epoch 262: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5326 - accuracy: 0.7984 - val_loss: 1.5001 - val_accuracy: 0.5085\n","Epoch 263/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5338 - accuracy: 0.7958\n","Epoch 263: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5329 - accuracy: 0.7969 - val_loss: 1.5284 - val_accuracy: 0.5000\n","Epoch 264/500\n","159/168 [===========================>..] - ETA: 0s - loss: 0.5314 - accuracy: 0.7917\n","Epoch 264: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5269 - accuracy: 0.7930 - val_loss: 1.6665 - val_accuracy: 0.4961\n","Epoch 265/500\n","160/168 [===========================>..] - ETA: 0s - loss: 0.5386 - accuracy: 0.7945\n","Epoch 265: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5354 - accuracy: 0.7963 - val_loss: 1.5671 - val_accuracy: 0.4948\n","Epoch 266/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5298 - accuracy: 0.7988\n","Epoch 266: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5309 - accuracy: 0.7982 - val_loss: 1.5389 - val_accuracy: 0.5085\n","Epoch 267/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.5152 - accuracy: 0.8059\n","Epoch 267: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5145 - accuracy: 0.8058 - val_loss: 1.6235 - val_accuracy: 0.5020\n","Epoch 268/500\n","159/168 [===========================>..] - ETA: 0s - loss: 0.5056 - accuracy: 0.8029\n","Epoch 268: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5078 - accuracy: 0.8017 - val_loss: 1.5520 - val_accuracy: 0.4974\n","Epoch 269/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5281 - accuracy: 0.7994\n","Epoch 269: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5272 - accuracy: 0.8000 - val_loss: 1.5739 - val_accuracy: 0.4915\n","Epoch 270/500\n","156/168 [==========================>...] - ETA: 0s - loss: 0.5359 - accuracy: 0.7975\n","Epoch 270: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5432 - accuracy: 0.7982 - val_loss: 1.4777 - val_accuracy: 0.5039\n","Epoch 271/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5190 - accuracy: 0.7959\n","Epoch 271: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5191 - accuracy: 0.7971 - val_loss: 1.5145 - val_accuracy: 0.5020\n","Epoch 272/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5215 - accuracy: 0.8004\n","Epoch 272: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5213 - accuracy: 0.8002 - val_loss: 1.5095 - val_accuracy: 0.4948\n","Epoch 273/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5289 - accuracy: 0.7921\n","Epoch 273: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5311 - accuracy: 0.7909 - val_loss: 1.5066 - val_accuracy: 0.4934\n","Epoch 274/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5448 - accuracy: 0.7889\n","Epoch 274: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5448 - accuracy: 0.7889 - val_loss: 1.5316 - val_accuracy: 0.4948\n","Epoch 275/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5171 - accuracy: 0.7957\n","Epoch 275: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5209 - accuracy: 0.7935 - val_loss: 1.5197 - val_accuracy: 0.5046\n","Epoch 276/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5125 - accuracy: 0.8068\n","Epoch 276: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5099 - accuracy: 0.8080 - val_loss: 1.5392 - val_accuracy: 0.5020\n","Epoch 277/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5171 - accuracy: 0.8011\n","Epoch 277: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5182 - accuracy: 0.8010 - val_loss: 1.4065 - val_accuracy: 0.5230\n","Epoch 278/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5303 - accuracy: 0.7966\n","Epoch 278: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5307 - accuracy: 0.7965 - val_loss: 1.4972 - val_accuracy: 0.4934\n","Epoch 279/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5040 - accuracy: 0.8084\n","Epoch 279: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5050 - accuracy: 0.8080 - val_loss: 1.5162 - val_accuracy: 0.4961\n","Epoch 280/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5277 - accuracy: 0.8008\n","Epoch 280: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5277 - accuracy: 0.8008 - val_loss: 1.5760 - val_accuracy: 0.5125\n","Epoch 281/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5282 - accuracy: 0.8051\n","Epoch 281: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5249 - accuracy: 0.8056 - val_loss: 1.4749 - val_accuracy: 0.4908\n","Epoch 282/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4952 - accuracy: 0.8022\n","Epoch 282: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4933 - accuracy: 0.8028 - val_loss: 1.6141 - val_accuracy: 0.5177\n","Epoch 283/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5198 - accuracy: 0.8073\n","Epoch 283: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5217 - accuracy: 0.8069 - val_loss: 1.5637 - val_accuracy: 0.5046\n","Epoch 284/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5145 - accuracy: 0.8091\n","Epoch 284: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5143 - accuracy: 0.8078 - val_loss: 1.5964 - val_accuracy: 0.5020\n","Epoch 285/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5253 - accuracy: 0.8023\n","Epoch 285: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5243 - accuracy: 0.8010 - val_loss: 1.5653 - val_accuracy: 0.5118\n","Epoch 286/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5145 - accuracy: 0.8107\n","Epoch 286: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5173 - accuracy: 0.8073 - val_loss: 1.5786 - val_accuracy: 0.5046\n","Epoch 287/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5161 - accuracy: 0.8074\n","Epoch 287: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5190 - accuracy: 0.8064 - val_loss: 1.6867 - val_accuracy: 0.4882\n","Epoch 288/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5182 - accuracy: 0.8077\n","Epoch 288: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5241 - accuracy: 0.8030 - val_loss: 1.5520 - val_accuracy: 0.4928\n","Epoch 289/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5069 - accuracy: 0.8054\n","Epoch 289: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5082 - accuracy: 0.8058 - val_loss: 1.5970 - val_accuracy: 0.4954\n","Epoch 290/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5159 - accuracy: 0.8025\n","Epoch 290: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5159 - accuracy: 0.8025 - val_loss: 1.6194 - val_accuracy: 0.4967\n","Epoch 291/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4945 - accuracy: 0.8053\n","Epoch 291: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4953 - accuracy: 0.8045 - val_loss: 1.7243 - val_accuracy: 0.5033\n","Epoch 292/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5055 - accuracy: 0.8040\n","Epoch 292: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5068 - accuracy: 0.8043 - val_loss: 1.6001 - val_accuracy: 0.5000\n","Epoch 293/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5292 - accuracy: 0.8039\n","Epoch 293: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5296 - accuracy: 0.8045 - val_loss: 1.6809 - val_accuracy: 0.4902\n","Epoch 294/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5084 - accuracy: 0.8069\n","Epoch 294: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5088 - accuracy: 0.8060 - val_loss: 1.6123 - val_accuracy: 0.5007\n","Epoch 295/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5120 - accuracy: 0.8114\n","Epoch 295: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5104 - accuracy: 0.8119 - val_loss: 1.4880 - val_accuracy: 0.5230\n","Epoch 296/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5129 - accuracy: 0.7991\n","Epoch 296: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5154 - accuracy: 0.7987 - val_loss: 1.5517 - val_accuracy: 0.5125\n","Epoch 297/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5025 - accuracy: 0.7978\n","Epoch 297: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5063 - accuracy: 0.7969 - val_loss: 1.6054 - val_accuracy: 0.5026\n","Epoch 298/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5097 - accuracy: 0.8097\n","Epoch 298: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5094 - accuracy: 0.8101 - val_loss: 1.6315 - val_accuracy: 0.4993\n","Epoch 299/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4860 - accuracy: 0.8151\n","Epoch 299: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4925 - accuracy: 0.8131 - val_loss: 1.6657 - val_accuracy: 0.5013\n","Epoch 300/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5048 - accuracy: 0.8070\n","Epoch 300: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5062 - accuracy: 0.8071 - val_loss: 1.5973 - val_accuracy: 0.5046\n","Epoch 301/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5155 - accuracy: 0.8012\n","Epoch 301: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5123 - accuracy: 0.8017 - val_loss: 1.6833 - val_accuracy: 0.4961\n","Epoch 302/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5141 - accuracy: 0.8014\n","Epoch 302: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5114 - accuracy: 0.8032 - val_loss: 1.5728 - val_accuracy: 0.5184\n","Epoch 303/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5184 - accuracy: 0.8013\n","Epoch 303: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5202 - accuracy: 0.8017 - val_loss: 1.5856 - val_accuracy: 0.4974\n","Epoch 304/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4917 - accuracy: 0.8082\n","Epoch 304: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5055 - accuracy: 0.8051 - val_loss: 1.5704 - val_accuracy: 0.5138\n","Epoch 305/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5211 - accuracy: 0.8060\n","Epoch 305: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5186 - accuracy: 0.8047 - val_loss: 1.6385 - val_accuracy: 0.4908\n","Epoch 306/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5242 - accuracy: 0.8031\n","Epoch 306: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5264 - accuracy: 0.8032 - val_loss: 1.5774 - val_accuracy: 0.5033\n","Epoch 307/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5309 - accuracy: 0.7981\n","Epoch 307: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5277 - accuracy: 0.8013 - val_loss: 1.6425 - val_accuracy: 0.4928\n","Epoch 308/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5078 - accuracy: 0.8060\n","Epoch 308: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5078 - accuracy: 0.8060 - val_loss: 1.6282 - val_accuracy: 0.5007\n","Epoch 309/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5021 - accuracy: 0.8151\n","Epoch 309: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5037 - accuracy: 0.8142 - val_loss: 1.6002 - val_accuracy: 0.4934\n","Epoch 310/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5110 - accuracy: 0.8034\n","Epoch 310: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5110 - accuracy: 0.8034 - val_loss: 1.6472 - val_accuracy: 0.4875\n","Epoch 311/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5120 - accuracy: 0.8074\n","Epoch 311: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5122 - accuracy: 0.8064 - val_loss: 1.6312 - val_accuracy: 0.4882\n","Epoch 312/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5102 - accuracy: 0.8072\n","Epoch 312: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5048 - accuracy: 0.8084 - val_loss: 1.5693 - val_accuracy: 0.5007\n","Epoch 313/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5047 - accuracy: 0.8067\n","Epoch 313: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5073 - accuracy: 0.8073 - val_loss: 1.6469 - val_accuracy: 0.4934\n","Epoch 314/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5171 - accuracy: 0.7999\n","Epoch 314: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5170 - accuracy: 0.8002 - val_loss: 1.6367 - val_accuracy: 0.5059\n","Epoch 315/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.5019 - accuracy: 0.8063\n","Epoch 315: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5060 - accuracy: 0.8054 - val_loss: 1.6551 - val_accuracy: 0.5105\n","Epoch 316/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5047 - accuracy: 0.8068\n","Epoch 316: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5051 - accuracy: 0.8064 - val_loss: 1.6488 - val_accuracy: 0.5164\n","Epoch 317/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5251 - accuracy: 0.7964\n","Epoch 317: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5252 - accuracy: 0.7965 - val_loss: 1.5319 - val_accuracy: 0.4974\n","Epoch 318/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5012 - accuracy: 0.8070\n","Epoch 318: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5025 - accuracy: 0.8088 - val_loss: 1.6119 - val_accuracy: 0.4948\n","Epoch 319/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5380 - accuracy: 0.7898\n","Epoch 319: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5290 - accuracy: 0.7945 - val_loss: 1.6335 - val_accuracy: 0.4921\n","Epoch 320/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5041 - accuracy: 0.8065\n","Epoch 320: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5019 - accuracy: 0.8077 - val_loss: 1.5199 - val_accuracy: 0.5059\n","Epoch 321/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5133 - accuracy: 0.8143\n","Epoch 321: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5123 - accuracy: 0.8123 - val_loss: 1.5645 - val_accuracy: 0.5138\n","Epoch 322/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5116 - accuracy: 0.8031\n","Epoch 322: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5146 - accuracy: 0.8041 - val_loss: 1.6933 - val_accuracy: 0.5026\n","Epoch 323/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4986 - accuracy: 0.8067\n","Epoch 323: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5017 - accuracy: 0.8065 - val_loss: 1.5675 - val_accuracy: 0.4993\n","Epoch 324/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5192 - accuracy: 0.8056\n","Epoch 324: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5193 - accuracy: 0.8041 - val_loss: 1.6231 - val_accuracy: 0.5033\n","Epoch 325/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5090 - accuracy: 0.8037\n","Epoch 325: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5089 - accuracy: 0.8036 - val_loss: 1.5757 - val_accuracy: 0.4974\n","Epoch 326/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5011 - accuracy: 0.8105\n","Epoch 326: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5001 - accuracy: 0.8105 - val_loss: 1.6016 - val_accuracy: 0.5007\n","Epoch 327/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5130 - accuracy: 0.8020\n","Epoch 327: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5096 - accuracy: 0.8021 - val_loss: 1.6874 - val_accuracy: 0.4928\n","Epoch 328/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5448 - accuracy: 0.7884\n","Epoch 328: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5416 - accuracy: 0.7924 - val_loss: 1.6278 - val_accuracy: 0.4862\n","Epoch 329/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5016 - accuracy: 0.8042\n","Epoch 329: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4973 - accuracy: 0.8062 - val_loss: 1.6205 - val_accuracy: 0.4882\n","Epoch 330/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5070 - accuracy: 0.8104\n","Epoch 330: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5062 - accuracy: 0.8108 - val_loss: 1.6130 - val_accuracy: 0.5052\n","Epoch 331/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4973 - accuracy: 0.8117\n","Epoch 331: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4946 - accuracy: 0.8129 - val_loss: 1.6450 - val_accuracy: 0.5013\n","Epoch 332/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4983 - accuracy: 0.8139\n","Epoch 332: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5042 - accuracy: 0.8119 - val_loss: 1.5970 - val_accuracy: 0.5026\n","Epoch 333/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5099 - accuracy: 0.8119\n","Epoch 333: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5099 - accuracy: 0.8119 - val_loss: 1.5504 - val_accuracy: 0.5046\n","Epoch 334/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5031 - accuracy: 0.8065\n","Epoch 334: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5017 - accuracy: 0.8071 - val_loss: 1.6943 - val_accuracy: 0.4895\n","Epoch 335/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5135 - accuracy: 0.8074\n","Epoch 335: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5153 - accuracy: 0.8069 - val_loss: 1.5024 - val_accuracy: 0.5079\n","Epoch 336/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4976 - accuracy: 0.8091\n","Epoch 336: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4985 - accuracy: 0.8088 - val_loss: 1.5797 - val_accuracy: 0.5243\n","Epoch 337/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4967 - accuracy: 0.8054\n","Epoch 337: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4992 - accuracy: 0.8067 - val_loss: 1.5975 - val_accuracy: 0.5033\n","Epoch 338/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5188 - accuracy: 0.8008\n","Epoch 338: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5221 - accuracy: 0.7985 - val_loss: 1.5933 - val_accuracy: 0.5046\n","Epoch 339/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5038 - accuracy: 0.8084\n","Epoch 339: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5047 - accuracy: 0.8075 - val_loss: 1.7013 - val_accuracy: 0.4961\n","Epoch 340/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5194 - accuracy: 0.8037\n","Epoch 340: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5230 - accuracy: 0.8026 - val_loss: 1.5003 - val_accuracy: 0.5112\n","Epoch 341/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5224 - accuracy: 0.7931\n","Epoch 341: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5158 - accuracy: 0.7961 - val_loss: 1.6684 - val_accuracy: 0.5020\n","Epoch 342/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4923 - accuracy: 0.8034\n","Epoch 342: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4908 - accuracy: 0.8041 - val_loss: 1.5770 - val_accuracy: 0.5059\n","Epoch 343/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5011 - accuracy: 0.8113\n","Epoch 343: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5006 - accuracy: 0.8116 - val_loss: 1.6043 - val_accuracy: 0.5144\n","Epoch 344/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4970 - accuracy: 0.8044\n","Epoch 344: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4999 - accuracy: 0.8034 - val_loss: 1.5951 - val_accuracy: 0.4948\n","Epoch 345/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5106 - accuracy: 0.8028\n","Epoch 345: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5118 - accuracy: 0.8034 - val_loss: 1.5546 - val_accuracy: 0.4967\n","Epoch 346/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5088 - accuracy: 0.8022\n","Epoch 346: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5100 - accuracy: 0.8025 - val_loss: 1.7013 - val_accuracy: 0.4980\n","Epoch 347/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5068 - accuracy: 0.8050\n","Epoch 347: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5063 - accuracy: 0.8049 - val_loss: 1.6554 - val_accuracy: 0.4928\n","Epoch 348/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5294 - accuracy: 0.7975\n","Epoch 348: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5295 - accuracy: 0.7974 - val_loss: 1.5220 - val_accuracy: 0.5026\n","Epoch 349/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5030 - accuracy: 0.8016\n","Epoch 349: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5012 - accuracy: 0.8039 - val_loss: 1.5864 - val_accuracy: 0.5000\n","Epoch 350/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4925 - accuracy: 0.8181\n","Epoch 350: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4996 - accuracy: 0.8138 - val_loss: 1.5629 - val_accuracy: 0.5059\n","Epoch 351/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5026 - accuracy: 0.8064\n","Epoch 351: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5016 - accuracy: 0.8051 - val_loss: 1.7364 - val_accuracy: 0.4843\n","Epoch 352/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4975 - accuracy: 0.8056\n","Epoch 352: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4924 - accuracy: 0.8065 - val_loss: 1.7304 - val_accuracy: 0.4862\n","Epoch 353/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5035 - accuracy: 0.8082\n","Epoch 353: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5036 - accuracy: 0.8086 - val_loss: 1.6919 - val_accuracy: 0.5026\n","Epoch 354/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.5337 - accuracy: 0.7982\n","Epoch 354: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5347 - accuracy: 0.7971 - val_loss: 1.5287 - val_accuracy: 0.5000\n","Epoch 355/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.5094 - accuracy: 0.8131\n","Epoch 355: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5068 - accuracy: 0.8144 - val_loss: 1.5653 - val_accuracy: 0.4823\n","Epoch 356/500\n","160/168 [===========================>..] - ETA: 0s - loss: 0.5148 - accuracy: 0.8047\n","Epoch 356: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5158 - accuracy: 0.8051 - val_loss: 1.4520 - val_accuracy: 0.4934\n","Epoch 357/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5030 - accuracy: 0.8073\n","Epoch 357: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5029 - accuracy: 0.8080 - val_loss: 1.5742 - val_accuracy: 0.4961\n","Epoch 358/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4934 - accuracy: 0.8085\n","Epoch 358: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4938 - accuracy: 0.8077 - val_loss: 1.5479 - val_accuracy: 0.5020\n","Epoch 359/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.4935 - accuracy: 0.8127\n","Epoch 359: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4940 - accuracy: 0.8123 - val_loss: 1.6169 - val_accuracy: 0.4954\n","Epoch 360/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4989 - accuracy: 0.8084\n","Epoch 360: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5117 - accuracy: 0.8047 - val_loss: 1.6291 - val_accuracy: 0.4941\n","Epoch 361/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4994 - accuracy: 0.8107\n","Epoch 361: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5013 - accuracy: 0.8092 - val_loss: 1.6743 - val_accuracy: 0.4895\n","Epoch 362/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5185 - accuracy: 0.8009\n","Epoch 362: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5151 - accuracy: 0.8034 - val_loss: 1.5885 - val_accuracy: 0.4961\n","Epoch 363/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5212 - accuracy: 0.8024\n","Epoch 363: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5213 - accuracy: 0.8028 - val_loss: 1.5403 - val_accuracy: 0.5046\n","Epoch 364/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.4946 - accuracy: 0.8125\n","Epoch 364: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4946 - accuracy: 0.8123 - val_loss: 1.5598 - val_accuracy: 0.4948\n","Epoch 365/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.4831 - accuracy: 0.8156\n","Epoch 365: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4827 - accuracy: 0.8149 - val_loss: 1.6179 - val_accuracy: 0.5066\n","Epoch 366/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4936 - accuracy: 0.8082\n","Epoch 366: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4995 - accuracy: 0.8060 - val_loss: 1.5608 - val_accuracy: 0.5098\n","Epoch 367/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5093 - accuracy: 0.8019\n","Epoch 367: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5116 - accuracy: 0.8012 - val_loss: 1.5469 - val_accuracy: 0.5066\n","Epoch 368/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5076 - accuracy: 0.8107\n","Epoch 368: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5080 - accuracy: 0.8103 - val_loss: 1.5459 - val_accuracy: 0.5039\n","Epoch 369/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5248 - accuracy: 0.7917\n","Epoch 369: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5185 - accuracy: 0.7943 - val_loss: 1.6462 - val_accuracy: 0.4993\n","Epoch 370/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5052 - accuracy: 0.8139\n","Epoch 370: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5026 - accuracy: 0.8134 - val_loss: 1.5034 - val_accuracy: 0.4980\n","Epoch 371/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5040 - accuracy: 0.8077\n","Epoch 371: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5042 - accuracy: 0.8071 - val_loss: 1.4991 - val_accuracy: 0.4921\n","Epoch 372/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4947 - accuracy: 0.8091\n","Epoch 372: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4920 - accuracy: 0.8095 - val_loss: 1.4754 - val_accuracy: 0.4902\n","Epoch 373/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4914 - accuracy: 0.8115\n","Epoch 373: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4906 - accuracy: 0.8112 - val_loss: 1.4629 - val_accuracy: 0.5105\n","Epoch 374/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5021 - accuracy: 0.8115\n","Epoch 374: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5049 - accuracy: 0.8097 - val_loss: 1.5196 - val_accuracy: 0.5007\n","Epoch 375/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4934 - accuracy: 0.8072\n","Epoch 375: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4957 - accuracy: 0.8049 - val_loss: 1.4773 - val_accuracy: 0.4921\n","Epoch 376/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4873 - accuracy: 0.8104\n","Epoch 376: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4868 - accuracy: 0.8110 - val_loss: 1.5817 - val_accuracy: 0.4908\n","Epoch 377/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4852 - accuracy: 0.8160\n","Epoch 377: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4852 - accuracy: 0.8160 - val_loss: 1.6540 - val_accuracy: 0.4862\n","Epoch 378/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5220 - accuracy: 0.8021\n","Epoch 378: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5275 - accuracy: 0.8006 - val_loss: 1.5624 - val_accuracy: 0.4816\n","Epoch 379/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5120 - accuracy: 0.8069\n","Epoch 379: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5108 - accuracy: 0.8073 - val_loss: 1.5617 - val_accuracy: 0.4888\n","Epoch 380/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4965 - accuracy: 0.8080\n","Epoch 380: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4986 - accuracy: 0.8078 - val_loss: 1.6198 - val_accuracy: 0.4803\n","Epoch 381/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4893 - accuracy: 0.8131\n","Epoch 381: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4984 - accuracy: 0.8095 - val_loss: 1.6172 - val_accuracy: 0.4738\n","Epoch 382/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5174 - accuracy: 0.8060\n","Epoch 382: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5174 - accuracy: 0.8060 - val_loss: 1.6206 - val_accuracy: 0.4869\n","Epoch 383/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5222 - accuracy: 0.8047\n","Epoch 383: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5234 - accuracy: 0.8047 - val_loss: 1.5517 - val_accuracy: 0.4908\n","Epoch 384/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4949 - accuracy: 0.8119\n","Epoch 384: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4930 - accuracy: 0.8121 - val_loss: 1.5388 - val_accuracy: 0.4934\n","Epoch 385/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4992 - accuracy: 0.8096\n","Epoch 385: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4956 - accuracy: 0.8103 - val_loss: 1.6042 - val_accuracy: 0.4869\n","Epoch 386/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4768 - accuracy: 0.8170\n","Epoch 386: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4790 - accuracy: 0.8157 - val_loss: 1.5370 - val_accuracy: 0.5059\n","Epoch 387/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5048 - accuracy: 0.8106\n","Epoch 387: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5159 - accuracy: 0.8065 - val_loss: 1.4169 - val_accuracy: 0.4882\n","Epoch 388/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4974 - accuracy: 0.8073\n","Epoch 388: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4980 - accuracy: 0.8067 - val_loss: 1.4892 - val_accuracy: 0.4862\n","Epoch 389/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4861 - accuracy: 0.8102\n","Epoch 389: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4930 - accuracy: 0.8067 - val_loss: 1.5128 - val_accuracy: 0.4836\n","Epoch 390/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5009 - accuracy: 0.8121\n","Epoch 390: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5081 - accuracy: 0.8099 - val_loss: 1.4868 - val_accuracy: 0.4974\n","Epoch 391/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4988 - accuracy: 0.8111\n","Epoch 391: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5025 - accuracy: 0.8101 - val_loss: 1.5489 - val_accuracy: 0.5007\n","Epoch 392/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4901 - accuracy: 0.8125\n","Epoch 392: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4902 - accuracy: 0.8123 - val_loss: 1.5696 - val_accuracy: 0.4908\n","Epoch 393/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4941 - accuracy: 0.8119\n","Epoch 393: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4916 - accuracy: 0.8131 - val_loss: 1.5714 - val_accuracy: 0.4941\n","Epoch 394/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4994 - accuracy: 0.8075\n","Epoch 394: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5014 - accuracy: 0.8078 - val_loss: 1.6141 - val_accuracy: 0.4967\n","Epoch 395/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4892 - accuracy: 0.8115\n","Epoch 395: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4887 - accuracy: 0.8119 - val_loss: 1.6542 - val_accuracy: 0.4875\n","Epoch 396/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5023 - accuracy: 0.8067\n","Epoch 396: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5002 - accuracy: 0.8078 - val_loss: 1.5846 - val_accuracy: 0.5000\n","Epoch 397/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.5029 - accuracy: 0.8074\n","Epoch 397: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4996 - accuracy: 0.8090 - val_loss: 1.6011 - val_accuracy: 0.4888\n","Epoch 398/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5117 - accuracy: 0.8100\n","Epoch 398: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5154 - accuracy: 0.8071 - val_loss: 1.5081 - val_accuracy: 0.5013\n","Epoch 399/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5030 - accuracy: 0.8048\n","Epoch 399: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5033 - accuracy: 0.8069 - val_loss: 1.6139 - val_accuracy: 0.4895\n","Epoch 400/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5143 - accuracy: 0.8052\n","Epoch 400: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5143 - accuracy: 0.8052 - val_loss: 1.6243 - val_accuracy: 0.4810\n","Epoch 401/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4847 - accuracy: 0.8181\n","Epoch 401: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4864 - accuracy: 0.8168 - val_loss: 1.6679 - val_accuracy: 0.4934\n","Epoch 402/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.5100 - accuracy: 0.8077\n","Epoch 402: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5136 - accuracy: 0.8075 - val_loss: 1.6337 - val_accuracy: 0.4823\n","Epoch 403/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4924 - accuracy: 0.8123\n","Epoch 403: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4917 - accuracy: 0.8121 - val_loss: 1.5853 - val_accuracy: 0.4928\n","Epoch 404/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5084 - accuracy: 0.8158\n","Epoch 404: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5067 - accuracy: 0.8170 - val_loss: 1.5491 - val_accuracy: 0.4928\n","Epoch 405/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5043 - accuracy: 0.8041\n","Epoch 405: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5037 - accuracy: 0.8062 - val_loss: 1.5514 - val_accuracy: 0.4843\n","Epoch 406/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5023 - accuracy: 0.8100\n","Epoch 406: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5015 - accuracy: 0.8080 - val_loss: 1.5122 - val_accuracy: 0.4902\n","Epoch 407/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4977 - accuracy: 0.8131\n","Epoch 407: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4977 - accuracy: 0.8131 - val_loss: 1.5027 - val_accuracy: 0.5046\n","Epoch 408/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4801 - accuracy: 0.8129\n","Epoch 408: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4878 - accuracy: 0.8108 - val_loss: 1.5396 - val_accuracy: 0.4902\n","Epoch 409/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5028 - accuracy: 0.8123\n","Epoch 409: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4979 - accuracy: 0.8132 - val_loss: 1.6267 - val_accuracy: 0.4974\n","Epoch 410/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5122 - accuracy: 0.8066\n","Epoch 410: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5086 - accuracy: 0.8086 - val_loss: 1.4800 - val_accuracy: 0.5039\n","Epoch 411/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5101 - accuracy: 0.8117\n","Epoch 411: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5080 - accuracy: 0.8144 - val_loss: 1.5832 - val_accuracy: 0.4967\n","Epoch 412/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5064 - accuracy: 0.8090\n","Epoch 412: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5090 - accuracy: 0.8078 - val_loss: 1.5048 - val_accuracy: 0.5026\n","Epoch 413/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4890 - accuracy: 0.8133\n","Epoch 413: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4960 - accuracy: 0.8123 - val_loss: 1.5295 - val_accuracy: 0.4980\n","Epoch 414/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4633 - accuracy: 0.8170\n","Epoch 414: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4648 - accuracy: 0.8192 - val_loss: 1.6924 - val_accuracy: 0.4783\n","Epoch 415/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5123 - accuracy: 0.8076\n","Epoch 415: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5063 - accuracy: 0.8082 - val_loss: 1.6147 - val_accuracy: 0.4908\n","Epoch 416/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4930 - accuracy: 0.8143\n","Epoch 416: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4946 - accuracy: 0.8144 - val_loss: 1.5273 - val_accuracy: 0.4934\n","Epoch 417/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4881 - accuracy: 0.8188\n","Epoch 417: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4871 - accuracy: 0.8194 - val_loss: 1.5337 - val_accuracy: 0.4869\n","Epoch 418/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5065 - accuracy: 0.8058\n","Epoch 418: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5065 - accuracy: 0.8058 - val_loss: 1.5497 - val_accuracy: 0.4882\n","Epoch 419/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4984 - accuracy: 0.8121\n","Epoch 419: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4984 - accuracy: 0.8121 - val_loss: 1.5700 - val_accuracy: 0.4882\n","Epoch 420/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4786 - accuracy: 0.8199\n","Epoch 420: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4786 - accuracy: 0.8199 - val_loss: 1.5772 - val_accuracy: 0.4856\n","Epoch 421/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4991 - accuracy: 0.8114\n","Epoch 421: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4996 - accuracy: 0.8112 - val_loss: 1.5174 - val_accuracy: 0.4908\n","Epoch 422/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.4814 - accuracy: 0.8137\n","Epoch 422: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4816 - accuracy: 0.8125 - val_loss: 1.6026 - val_accuracy: 0.4875\n","Epoch 423/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5049 - accuracy: 0.8138\n","Epoch 423: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4993 - accuracy: 0.8145 - val_loss: 1.5078 - val_accuracy: 0.4888\n","Epoch 424/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.4896 - accuracy: 0.8189\n","Epoch 424: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4944 - accuracy: 0.8164 - val_loss: 1.5706 - val_accuracy: 0.4869\n","Epoch 425/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4776 - accuracy: 0.8175\n","Epoch 425: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4866 - accuracy: 0.8151 - val_loss: 1.5945 - val_accuracy: 0.4862\n","Epoch 426/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4966 - accuracy: 0.8101\n","Epoch 426: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4950 - accuracy: 0.8101 - val_loss: 1.5728 - val_accuracy: 0.4849\n","Epoch 427/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4997 - accuracy: 0.8115\n","Epoch 427: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5031 - accuracy: 0.8106 - val_loss: 1.5000 - val_accuracy: 0.5026\n","Epoch 428/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4836 - accuracy: 0.8208\n","Epoch 428: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4837 - accuracy: 0.8198 - val_loss: 1.5825 - val_accuracy: 0.4829\n","Epoch 429/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5056 - accuracy: 0.8074\n","Epoch 429: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5031 - accuracy: 0.8060 - val_loss: 1.4816 - val_accuracy: 0.4921\n","Epoch 430/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.5084 - accuracy: 0.8005\n","Epoch 430: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5087 - accuracy: 0.8000 - val_loss: 1.5738 - val_accuracy: 0.4836\n","Epoch 431/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.5081 - accuracy: 0.8144\n","Epoch 431: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5071 - accuracy: 0.8147 - val_loss: 1.5425 - val_accuracy: 0.4888\n","Epoch 432/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.4911 - accuracy: 0.8167\n","Epoch 432: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4924 - accuracy: 0.8155 - val_loss: 1.5888 - val_accuracy: 0.4869\n","Epoch 433/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4812 - accuracy: 0.8185\n","Epoch 433: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4818 - accuracy: 0.8181 - val_loss: 1.5562 - val_accuracy: 0.4915\n","Epoch 434/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4960 - accuracy: 0.8094\n","Epoch 434: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4928 - accuracy: 0.8118 - val_loss: 1.5540 - val_accuracy: 0.4888\n","Epoch 435/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4940 - accuracy: 0.8078\n","Epoch 435: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4944 - accuracy: 0.8082 - val_loss: 1.6676 - val_accuracy: 0.4843\n","Epoch 436/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5021 - accuracy: 0.8082\n","Epoch 436: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5025 - accuracy: 0.8086 - val_loss: 1.5537 - val_accuracy: 0.5000\n","Epoch 437/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4745 - accuracy: 0.8138\n","Epoch 437: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4771 - accuracy: 0.8138 - val_loss: 1.5988 - val_accuracy: 0.4849\n","Epoch 438/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4941 - accuracy: 0.8078\n","Epoch 438: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4976 - accuracy: 0.8082 - val_loss: 1.6321 - val_accuracy: 0.4797\n","Epoch 439/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4965 - accuracy: 0.8127\n","Epoch 439: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4981 - accuracy: 0.8121 - val_loss: 1.6880 - val_accuracy: 0.4777\n","Epoch 440/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.4817 - accuracy: 0.8174\n","Epoch 440: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4805 - accuracy: 0.8173 - val_loss: 1.6544 - val_accuracy: 0.4823\n","Epoch 441/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4749 - accuracy: 0.8162\n","Epoch 441: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4768 - accuracy: 0.8160 - val_loss: 1.6673 - val_accuracy: 0.4738\n","Epoch 442/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4908 - accuracy: 0.8129\n","Epoch 442: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4886 - accuracy: 0.8138 - val_loss: 1.6383 - val_accuracy: 0.4783\n","Epoch 443/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4944 - accuracy: 0.8152\n","Epoch 443: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4918 - accuracy: 0.8151 - val_loss: 1.5953 - val_accuracy: 0.4993\n","Epoch 444/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4883 - accuracy: 0.8152\n","Epoch 444: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4886 - accuracy: 0.8145 - val_loss: 1.5819 - val_accuracy: 0.4902\n","Epoch 445/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4698 - accuracy: 0.8233\n","Epoch 445: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4717 - accuracy: 0.8212 - val_loss: 1.5878 - val_accuracy: 0.4810\n","Epoch 446/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5082 - accuracy: 0.8090\n","Epoch 446: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5081 - accuracy: 0.8119 - val_loss: 1.5551 - val_accuracy: 0.4777\n","Epoch 447/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4849 - accuracy: 0.8147\n","Epoch 447: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4849 - accuracy: 0.8147 - val_loss: 1.5065 - val_accuracy: 0.4921\n","Epoch 448/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4886 - accuracy: 0.8152\n","Epoch 448: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4820 - accuracy: 0.8175 - val_loss: 1.6537 - val_accuracy: 0.4915\n","Epoch 449/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4855 - accuracy: 0.8228\n","Epoch 449: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4768 - accuracy: 0.8263 - val_loss: 1.6119 - val_accuracy: 0.4921\n","Epoch 450/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.5168 - accuracy: 0.8050\n","Epoch 450: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5192 - accuracy: 0.8036 - val_loss: 1.5085 - val_accuracy: 0.4790\n","Epoch 451/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4845 - accuracy: 0.8107\n","Epoch 451: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4915 - accuracy: 0.8086 - val_loss: 1.6104 - val_accuracy: 0.4954\n","Epoch 452/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.5010 - accuracy: 0.8127\n","Epoch 452: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4982 - accuracy: 0.8121 - val_loss: 1.6195 - val_accuracy: 0.4829\n","Epoch 453/500\n","155/168 [==========================>...] - ETA: 0s - loss: 0.4952 - accuracy: 0.8087\n","Epoch 453: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4948 - accuracy: 0.8093 - val_loss: 1.5864 - val_accuracy: 0.4934\n","Epoch 454/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4891 - accuracy: 0.8182\n","Epoch 454: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4925 - accuracy: 0.8168 - val_loss: 1.6063 - val_accuracy: 0.4895\n","Epoch 455/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4854 - accuracy: 0.8219\n","Epoch 455: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4921 - accuracy: 0.8177 - val_loss: 1.6143 - val_accuracy: 0.4948\n","Epoch 456/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4805 - accuracy: 0.8151\n","Epoch 456: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4805 - accuracy: 0.8151 - val_loss: 1.6544 - val_accuracy: 0.4843\n","Epoch 457/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4887 - accuracy: 0.8162\n","Epoch 457: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4896 - accuracy: 0.8157 - val_loss: 1.5142 - val_accuracy: 0.4987\n","Epoch 458/500\n","157/168 [===========================>..] - ETA: 0s - loss: 0.4911 - accuracy: 0.8171\n","Epoch 458: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4959 - accuracy: 0.8158 - val_loss: 1.5953 - val_accuracy: 0.4849\n","Epoch 459/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.4905 - accuracy: 0.8125\n","Epoch 459: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4883 - accuracy: 0.8131 - val_loss: 1.5501 - val_accuracy: 0.4928\n","Epoch 460/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.5011 - accuracy: 0.8129\n","Epoch 460: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5068 - accuracy: 0.8110 - val_loss: 1.5779 - val_accuracy: 0.4928\n","Epoch 461/500\n","168/168 [==============================] - ETA: 0s - loss: 0.5172 - accuracy: 0.8075\n","Epoch 461: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.5172 - accuracy: 0.8075 - val_loss: 1.5927 - val_accuracy: 0.4895\n","Epoch 462/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.5136 - accuracy: 0.8080\n","Epoch 462: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5162 - accuracy: 0.8080 - val_loss: 1.5327 - val_accuracy: 0.4875\n","Epoch 463/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4874 - accuracy: 0.8123\n","Epoch 463: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4871 - accuracy: 0.8123 - val_loss: 1.6071 - val_accuracy: 0.5007\n","Epoch 464/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.5093 - accuracy: 0.8061\n","Epoch 464: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4986 - accuracy: 0.8097 - val_loss: 1.5257 - val_accuracy: 0.5092\n","Epoch 465/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4828 - accuracy: 0.8198\n","Epoch 465: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4812 - accuracy: 0.8196 - val_loss: 1.4990 - val_accuracy: 0.4974\n","Epoch 466/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4868 - accuracy: 0.8156\n","Epoch 466: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4864 - accuracy: 0.8144 - val_loss: 1.6000 - val_accuracy: 0.4993\n","Epoch 467/500\n","154/168 [==========================>...] - ETA: 0s - loss: 0.4886 - accuracy: 0.8143\n","Epoch 467: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4838 - accuracy: 0.8164 - val_loss: 1.6573 - val_accuracy: 0.4980\n","Epoch 468/500\n","151/168 [=========================>....] - ETA: 0s - loss: 0.4702 - accuracy: 0.8251\n","Epoch 468: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4706 - accuracy: 0.8253 - val_loss: 1.5726 - val_accuracy: 0.4967\n","Epoch 469/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4910 - accuracy: 0.8105\n","Epoch 469: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4918 - accuracy: 0.8106 - val_loss: 1.5894 - val_accuracy: 0.4862\n","Epoch 470/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4734 - accuracy: 0.8201\n","Epoch 470: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4759 - accuracy: 0.8188 - val_loss: 1.6215 - val_accuracy: 0.4810\n","Epoch 471/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.4959 - accuracy: 0.8186\n","Epoch 471: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4963 - accuracy: 0.8181 - val_loss: 1.6897 - val_accuracy: 0.5007\n","Epoch 472/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.4920 - accuracy: 0.8137\n","Epoch 472: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4925 - accuracy: 0.8136 - val_loss: 1.6312 - val_accuracy: 0.4934\n","Epoch 473/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4988 - accuracy: 0.8099\n","Epoch 473: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4980 - accuracy: 0.8101 - val_loss: 1.6104 - val_accuracy: 0.4974\n","Epoch 474/500\n","150/168 [=========================>....] - ETA: 0s - loss: 0.4828 - accuracy: 0.8148\n","Epoch 474: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4808 - accuracy: 0.8166 - val_loss: 1.7129 - val_accuracy: 0.4895\n","Epoch 475/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4761 - accuracy: 0.8221\n","Epoch 475: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4766 - accuracy: 0.8216 - val_loss: 1.6367 - val_accuracy: 0.4961\n","Epoch 476/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4877 - accuracy: 0.8127\n","Epoch 476: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4932 - accuracy: 0.8095 - val_loss: 1.5663 - val_accuracy: 0.4993\n","Epoch 477/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.5043 - accuracy: 0.8086\n","Epoch 477: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4981 - accuracy: 0.8118 - val_loss: 1.6845 - val_accuracy: 0.4895\n","Epoch 478/500\n","153/168 [==========================>...] - ETA: 0s - loss: 0.4943 - accuracy: 0.8131\n","Epoch 478: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4960 - accuracy: 0.8127 - val_loss: 1.5459 - val_accuracy: 0.4993\n","Epoch 479/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4718 - accuracy: 0.8172\n","Epoch 479: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4758 - accuracy: 0.8183 - val_loss: 1.5963 - val_accuracy: 0.5046\n","Epoch 480/500\n","152/168 [==========================>...] - ETA: 0s - loss: 0.4824 - accuracy: 0.8160\n","Epoch 480: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4872 - accuracy: 0.8147 - val_loss: 1.6270 - val_accuracy: 0.5046\n","Epoch 481/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4827 - accuracy: 0.8175\n","Epoch 481: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4827 - accuracy: 0.8175 - val_loss: 1.7339 - val_accuracy: 0.4921\n","Epoch 482/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.4932 - accuracy: 0.8152\n","Epoch 482: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4939 - accuracy: 0.8149 - val_loss: 1.6303 - val_accuracy: 0.4856\n","Epoch 483/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.4946 - accuracy: 0.8045\n","Epoch 483: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4925 - accuracy: 0.8062 - val_loss: 1.5897 - val_accuracy: 0.4987\n","Epoch 484/500\n","167/168 [============================>.] - ETA: 0s - loss: 0.4622 - accuracy: 0.8204\n","Epoch 484: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4632 - accuracy: 0.8203 - val_loss: 1.7491 - val_accuracy: 0.4895\n","Epoch 485/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.4836 - accuracy: 0.8173\n","Epoch 485: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4832 - accuracy: 0.8160 - val_loss: 1.6968 - val_accuracy: 0.4888\n","Epoch 486/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4861 - accuracy: 0.8121\n","Epoch 486: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4861 - accuracy: 0.8121 - val_loss: 1.6559 - val_accuracy: 0.4803\n","Epoch 487/500\n","164/168 [============================>.] - ETA: 0s - loss: 0.4756 - accuracy: 0.8201\n","Epoch 487: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4796 - accuracy: 0.8194 - val_loss: 1.5589 - val_accuracy: 0.4961\n","Epoch 488/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.4842 - accuracy: 0.8169\n","Epoch 488: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4842 - accuracy: 0.8170 - val_loss: 1.6451 - val_accuracy: 0.4967\n","Epoch 489/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5043 - accuracy: 0.8142\n","Epoch 489: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5010 - accuracy: 0.8149 - val_loss: 1.6287 - val_accuracy: 0.4849\n","Epoch 490/500\n","163/168 [============================>.] - ETA: 0s - loss: 0.5044 - accuracy: 0.8113\n","Epoch 490: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.5024 - accuracy: 0.8119 - val_loss: 1.6059 - val_accuracy: 0.5059\n","Epoch 491/500\n","162/168 [===========================>..] - ETA: 0s - loss: 0.4904 - accuracy: 0.8181\n","Epoch 491: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4897 - accuracy: 0.8181 - val_loss: 1.7533 - val_accuracy: 0.4934\n","Epoch 492/500\n","166/168 [============================>.] - ETA: 0s - loss: 0.4833 - accuracy: 0.8119\n","Epoch 492: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4822 - accuracy: 0.8123 - val_loss: 1.6110 - val_accuracy: 0.4934\n","Epoch 493/500\n","165/168 [============================>.] - ETA: 0s - loss: 0.4752 - accuracy: 0.8148\n","Epoch 493: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4793 - accuracy: 0.8132 - val_loss: 1.6506 - val_accuracy: 0.4921\n","Epoch 494/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.4834 - accuracy: 0.8142\n","Epoch 494: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4838 - accuracy: 0.8149 - val_loss: 1.6635 - val_accuracy: 0.4921\n","Epoch 495/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4736 - accuracy: 0.8186\n","Epoch 495: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4736 - accuracy: 0.8186 - val_loss: 1.6825 - val_accuracy: 0.5052\n","Epoch 496/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4920 - accuracy: 0.8138\n","Epoch 496: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4920 - accuracy: 0.8138 - val_loss: 1.7481 - val_accuracy: 0.4928\n","Epoch 497/500\n","168/168 [==============================] - ETA: 0s - loss: 0.4800 - accuracy: 0.8164\n","Epoch 497: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 3ms/step - loss: 0.4800 - accuracy: 0.8164 - val_loss: 1.6563 - val_accuracy: 0.4928\n","Epoch 498/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.4987 - accuracy: 0.8106\n","Epoch 498: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4969 - accuracy: 0.8112 - val_loss: 1.6310 - val_accuracy: 0.4974\n","Epoch 499/500\n","160/168 [===========================>..] - ETA: 0s - loss: 0.4884 - accuracy: 0.8207\n","Epoch 499: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4878 - accuracy: 0.8207 - val_loss: 1.6045 - val_accuracy: 0.4823\n","Epoch 500/500\n","161/168 [===========================>..] - ETA: 0s - loss: 0.4877 - accuracy: 0.8236\n","Epoch 500: val_loss did not improve from 1.16552\n","168/168 [==============================] - 1s 4ms/step - loss: 0.4958 - accuracy: 0.8212 - val_loss: 1.5227 - val_accuracy: 0.4856\n","Training completed in time:  0:04:53.725326\n","0.48556429147720337\n","48/48 [==============================] - 0s 1ms/step\n","[0 0 0 ... 3 4 4]\n"]}]},{"cell_type":"markdown","source":["### 6) VGG 16"],"metadata":{"id":"1D-0t1IRUO4c"}},{"cell_type":"code","source":["res_model = tf.keras.applications.VGG16(\n","    include_top=True, \n","    weights=None,\n","    input_tensor=None,\n","    input_shape=(x_train[0].shape[0],x_train[0].shape[1],x_train[0].shape[2]),\n","    pooling='avg',\n","    classes = 4,\n","    # classifier_activation=\"softmax\"\n",")\n","res_model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate= 0.0001), loss='categorical_crossentropy', metrics = 'accuracy')\n","early = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=5)\n","# train the model on the new data for a few epochs\n","res_model.fit(x_train, y_train, batch_size = 64, epochs = 100, validation_data = (x_test, y_test), callbacks = [early])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ynrvyxluUR3q","executionInfo":{"status":"ok","timestamp":1676435939430,"user_tz":-540,"elapsed":85331,"user":{"displayName":"DK D","userId":"10687755219747411266"}},"outputId":"a3445fda-c549-43e6-ebed-f682aeb1fa96"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","315/315 [==============================] - 15s 33ms/step - loss: 1.0137 - accuracy: 0.5589 - val_loss: 0.8571 - val_accuracy: 0.6615\n","Epoch 2/100\n","315/315 [==============================] - 10s 31ms/step - loss: 0.6261 - accuracy: 0.7637 - val_loss: 0.6984 - val_accuracy: 0.7400\n","Epoch 3/100\n","315/315 [==============================] - 10s 32ms/step - loss: 0.4889 - accuracy: 0.8194 - val_loss: 0.6808 - val_accuracy: 0.7484\n","Epoch 4/100\n","315/315 [==============================] - 10s 32ms/step - loss: 0.3793 - accuracy: 0.8612 - val_loss: 0.8004 - val_accuracy: 0.7358\n","Epoch 5/100\n","315/315 [==============================] - 10s 31ms/step - loss: 0.2838 - accuracy: 0.8956 - val_loss: 0.7934 - val_accuracy: 0.7489\n","Epoch 6/100\n","315/315 [==============================] - 10s 32ms/step - loss: 0.2113 - accuracy: 0.9210 - val_loss: 1.0698 - val_accuracy: 0.7152\n","Epoch 7/100\n","315/315 [==============================] - 10s 32ms/step - loss: 0.1566 - accuracy: 0.9425 - val_loss: 1.0322 - val_accuracy: 0.7378\n","Epoch 8/100\n","315/315 [==============================] - 10s 32ms/step - loss: 0.1214 - accuracy: 0.9565 - val_loss: 1.2156 - val_accuracy: 0.7257\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fe216671a90>"]},"metadata":{},"execution_count":10}]}]}